{
  "compilerOptions": {
    // ? Needed to type check our various .js files
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    // ? Due to paths, the effect of this prop is limited (already covered)
    "allowImportingTsExtensions": true,
    // ? Due to paths, the effect of this prop is limited (often ignored)
    "allowArbitraryExtensions": true,
    "alwaysStrict": true,
    "baseUrl": ".",
    // ? Does too much; opt-in (provided by allowJs) is better
    "checkJs": false,
    "jsx": "preserve",
    "declaration": false,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "incremental": true,
    "inlineSourceMap": true,
    "isolatedModules": true,
    // ? Tried it. Not a fan. Also conflicts with allowJs
    "isolatedDeclarations": false,
    "lib": [
      "ESNext",
      "DOM",
      "WebWorker.ImportScripts",
      "ScriptHost",
      "DOM.Iterable"
    ],
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "noEmit": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    // ! These aliases are auto-generated by symbiote. Instead of modifying them
    // ! directly, consider regenerating aliases across the entire project with:
    // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
    "paths": {
      "multiverse+babel-plugin-metadata-accumulator:*": [
        "packages/babel-plugin-metadata-accumulator/src/*"
      ],
      "multiverse+bfe:*": ["packages/bfe/src/*"],
      "multiverse+cli-utils:*": ["packages/cli-utils/src/*"],
      "multiverse+project-utils:*": ["packages/project-utils/src/*"],
      "multiverse+test-utils:*": ["packages/test-utils/src/*"],
      "multiverse+babel-plugin-metadata-accumulator": [
        "packages/babel-plugin-metadata-accumulator/src/index.ts"
      ],
      "multiverse+bfe": ["packages/bfe/src/index.ts"],
      "multiverse+cli-utils": ["packages/cli-utils/src/index.ts"],
      "multiverse+project-utils": ["packages/project-utils/src/index.ts"],
      "multiverse+test-utils": ["packages/test-utils/src/index.ts"],
      "rootverse+babel-plugin-metadata-accumulator:*": [
        "packages/babel-plugin-metadata-accumulator/*"
      ],
      "rootverse+bfe:*": ["packages/bfe/*"],
      "rootverse+cli-utils:*": ["packages/cli-utils/*"],
      "rootverse+project-utils:*": ["packages/project-utils/*"],
      "rootverse+test-utils:*": ["packages/test-utils/*"],
      "rootverse:*": ["*"],
      "universe+babel-plugin-metadata-accumulator:*": [
        "packages/babel-plugin-metadata-accumulator/src/*"
      ],
      "universe+bfe:*": ["packages/bfe/src/*"],
      "universe+cli-utils:*": ["packages/cli-utils/src/*"],
      "universe+project-utils:*": ["packages/project-utils/src/*"],
      "universe+test-utils:*": ["packages/test-utils/src/*"],
      "universe+babel-plugin-metadata-accumulator": [
        "packages/babel-plugin-metadata-accumulator/src/index.ts"
      ],
      "universe+bfe": ["packages/bfe/src/index.ts"],
      "universe+cli-utils": ["packages/cli-utils/src/index.ts"],
      "universe+project-utils": ["packages/project-utils/src/index.ts"],
      "universe+test-utils": ["packages/test-utils/src/index.ts"],
      "universe:*": ["src/*"],
      "universe": ["src/index.ts"],
      "testverse+babel-plugin-metadata-accumulator:*": [
        "packages/babel-plugin-metadata-accumulator/test/*"
      ],
      "testverse+bfe:*": ["packages/bfe/test/*"],
      "testverse+cli-utils:*": ["packages/cli-utils/test/*"],
      "testverse+project-utils:*": ["packages/project-utils/test/*"],
      "testverse+test-utils:*": ["packages/test-utils/test/*"],
      "testverse:*": ["test/*"],
      "typeverse:*": ["types/*"]
    },
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "strict": true,
    "target": "ESNext"
  },
  "include": [
    "types/**/*",
    "src/**/*",
    "test/**/*",
    "packages/*/src/**/*",
    "packages/*/test/**/*"
  ],
  "exclude": [
    "**/dist/**/*",
    "**/node_modules/**/*",
    "**/*.ignore",
    "**/*.ignore.*/**/*",
    "**/ignore.*"
  ]
}
