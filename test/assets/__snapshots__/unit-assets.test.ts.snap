// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`::compileTemplate accepts a template file path and returns a compilation result string: README.md 1`] = `
"<!-- xscripts-renovate-region-start -->

<p align="center" width="100%">
  <img width="300" src="./repo-name.png">
</p>

<p align="center" width="100%">
<!-- xscripts-renovate-region-end -->
package-description
<!-- xscripts-renovate-region-start -->
</p>

<hr />

badges

<br />

# title-name

<!-- xscripts-renovate-region-end -->

package-description

<!-- xscripts-renovate-region-start -->

<br />

---

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Install](#install)
- [Usage](#usage)
- [Appendix](#appendix)
  - [Published Package Details](#published-package-details)
  - [License](#license)
- [Contributing and Support](#contributing-and-support)
  - [Contributors](#contributors)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

<br />

## Install

<!-- xscripts-renovate-region-end -->

To install repo-name:

\`\`\`shell
npm install package-name
\`\`\`

If you want to use a specific version of repo-name, provide its semver:

\`\`\`shell
npm install package-name@1.2.3
\`\`\`

## Usage

<!-- TODO -->

TODO

<!-- xscripts-renovate-region-start -->

## Appendix

Further documentation can be found under [\`docs/\`](repo-reference-docs).

### Published Package Details

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-short-1

---‚úÑ---

package-build-details-short-2

---‚úÑ---

package-build-details-short-3

---‚úÑ---

package-build-details-short-4

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

<details><summary>Expand details</summary>

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-long-1

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

</details>

### License

See [LICENSE](repo-reference-license).

## Contributing and Support

**[New issues](repo-reference-new-issue) and
[pull requests](repo-reference-pr-compare) are always welcome and greatly
appreciated! ü§©** Just as well, you can
[star üåü this project](repo-reference-self) to let me know you found it useful!
‚úäüèø Or you could consider [buying me a beer](repo-reference-sponsor). Thank you!

See [CONTRIBUTING.md](repo-reference-contributing) and
[SUPPORT.md](repo-reference-support) for more information.

### Contributors

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->

[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)

<!-- ALL-CONTRIBUTORS-BADGE:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

Thanks goes to these wonderful people
([emoji key](repo-reference-all-contributors-emojis)):

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<table></table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

This project follows the [all-contributors](repo-reference-all-contributors)
specification. Contributions of any kind welcome!

<!-- xscripts-renovate-region-end -->
<!-- xscripts-renovate-region-definitions -->

repo-reference-definitions-badge

repo-reference-definitions-package

repo-reference-definitions-repo
"
`;

exports[`::compileTemplates accepts an object of template file path values and returns the same object with corresponding compilation result string values 1`] = `
{
  ".github/SUPPORT.md": "# Support [![Average issue resolution time][badge-issue-resolution]][link-issue-resolution] [![Issue open percentage][badge-issue-percentage]][open-issues]

Need help? Want to help this project? See below!

## Reporting an Issue

Before you begin, please [search open and past issues][open-issues] to see if
your issue or feature request is already being talked about.

If you find your issue already exists, make sure to [bump the issue by adding a
reaction][github-blog]. **If you're serious about wanting an issue to get
attention, use a reaction in place of a "+1" or other similar comment.**

If you cannot find an existing issue that describes your bug or feature, then
you're clear to create your issue using the guidelines below.

### Standard Reactions

Analysis of issue popularity (by tooling or otherwise) relies on the following
reaction emojis being present on issues, PRs, and replies:

\`:+1:\` üëçüèøüëçüèæüëçüèΩüëçüèºüëçüèªüëç ‚Äî up vote (AKA: _approve_, _like_, _+1_)

\`:-1:\` üëéüèøüëéüèæüëéüèΩüëéüèºüëéüèªüëé ‚Äî down vote (AKA: _disapprove_, _dislike_, _-1_)

### Bug Reports and Feature Requests

For the timeliest resolution to bug reports specifically, please make a good
faith effort to [follow the template][choose-new-issue]. The more quality
information you can provide, the quicker a fix will be found. Additionally:

- Ensure you file one issue per problem or feature request.
- Do not enumerate multiple bugs or feature requests in the same issue.
- Do not add your issue as a comment to an existing issue unless you're
  experiencing identical behavior or behavior that stems from the exact same
  problem.

That's it! You are now ready to [submit a new issue][choose-new-issue]! Thank
you for contribution üéâ, your efforts are greatly appreciated! üôåüèø

#### Closure Policy

- Issues that do not follow the appropriate template or contain necessary
  information may be closed immediately and the poster directed to these
  guidelines.
- Issues that go for an extended period without activity are subject to closure.

[badge-issue-percentage]:
  https://isitmaintained.com/badge/open/Xunnamius/repo-name.svg
  'Open issues as a percentage of all issues'
[badge-issue-resolution]:
  https://isitmaintained.com/badge/resolution/Xunnamius/repo-name.svg
  'Average time to resolve an issue'
[choose-new-issue]: repo-url/issues/new/choose
[github-blog]:
  https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments
[link-issue-resolution]:
  https://isitmaintained.com/project/Xunnamius/repo-name
[open-issues]: repo-url/issues?q=
",
  "CONTRIBUTING.md": "# Contributing

Hi there! First off, we're thrilled ü§© you want contribute to this project!

First time contributor to a GitHub project? If you could use some help getting
started, [take a look at this quick and easy guide][how-to-contribute]. üíú

## Briefly: Submitting a Pull Request (Pr)

> See also: [CODE_OF_CONDUCT.md][code-of-conduct]

This repository uses a [fully automated][github-actions] [continuous
linting][husky-cl] (CL), integration testing (CI), and deployment (CD)
[xpipeline][xpipeline]-based pipeline for integrating PRs and publishing
releases. The neat thing about a fully automated pipeline is that anyone
anywhere can make a contribution quickly and with minimal tedium.

This repository makes extensive use of [debug][pkg-debug]. Should you wish to
view all possible debugging output, [export
\`DEBUG='*,*:*'\`][pkg-debug-wildcards].

The ideal contributor flow is as follows:

1. [Fork][fork] this repository and [clone it locally][how-to-clone].
   - If there is a custom Docker image available for this project and you're
     comfortable with Docker, consider using it instead.
2. Configure and install dependencies with \`npm ci\`.
   - You use \`npm ci\` here instead of \`npm install\` to [prevent unnecessary
     updates to \`package.json\` and \`package-lock.json\`][npm-ci], but if it makes
     more sense to use \`npm install\` feel free to use that instead.
     - **If you're getting an EINTEGRITY error from npm, you need to delete
       package-lock.json before running \`npm install\` (not \`npm ci\`).**
   - If \`.env.example\` exists, consider copying it to \`.env\` and configuring
     sensible defaults.
3. Before making any changes, ensure all unit tests are passing with
   \`npm run test\`.
4. _(optional but recommended)_ Create a new branch, usually off \`main\`.
   - Example: \`git checkout -b contrib-feature-1\`.
5. Make your changes and commit. Your work will be checked as you commit; any
   problems will abort the commit/push attempt.
   - Ensure any new tests still pass even when the \`DEBUG\` environment variable
     is defined.
6. Push your commits to your fork and, when you're ready, [_fearlessly_ submit
   your PR][pr-compare]! Your changes will be tested in our CI pipeline.
7. Pat yourself on the back! Your hard work is well on its way to being reviewed
   and, if everything looks good, merged and released üöÄ

Additionally, there are a few things you can do to greatly increase the
likelihood your PR passes review:

- **Do** [open an issue][choose-new-issue] and discuss your proposed changes (to
  prevent wasting your valuable time, e.g. _maybe we're already working on a
  fix!_), and [search][open-issues] to see if there are any existing issues
  related to your concerns.
- **Do** practice [atomic committing][atomic-commits].
- **Do not** reduce code coverage ([codecov][codecov] checks are performed
  during CI).
- **Do** [follow convention][conventional-commits] when coming up with your
  commit messages.
- **Do not** circumvent CL, i.e. automated pre-commit linting, formatting, and
  unit testing.
- **Do** ensure \`README.md\` and other documentation that isn't autogenerated is
  kept consistent with your changes.
- **Do not** create a PR to introduce [_purely_ cosmetic
  commits][cosmetic-commits].
  - Code de-duplication and other potential optimizations we **do not** consider
    _purely_ cosmetic üôÇ
- **Do** keep your PR as narrow and focused as possible.
  - If you ran \`npm install\` instead of \`npm ci\` and it updated \`package.json\`
    or \`package-lock.json\` and those updates have nothing to do with your PR
    (e.g. random nested deps were updated), **do not** stage changes to those
    files.
  - If there are multiple related changes to be made but (1) they do not
    immediately depend on one another or (2) one implements extended/alternative
    functionality based on the other, consider submitting them as separate PRs
    instead.

At this point, you're ready to create your PR and ‚ú® contribute ‚ú®!

[atomic-commits]: https://www.codewithjason.com/atomic-commits-testing
[choose-new-issue]: repo-url/issues/new/choose
[code-of-conduct]: repo-url/.github/CODE_OF_CONDUCT.md
[codecov]: https://about.codecov.io
[conventional-commits]: https://www.conventionalcommits.org/en/v1.0.0#summary
[cosmetic-commits]:
  https://github.com/rails/rails/pull/13771#issuecomment-32746700
[fork]: repo-url/fork
[github-actions]: https://github.com/features/actions
[how-to-clone]:
  https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository
[how-to-contribute]: https://www.dataschool.io/how-to-contribute-on-github
[husky-cl]: repo-url/tree/main/.husky
[npm-ci]: https://docs.npmjs.com/cli/v6/commands/npm-ci
[open-issues]: repo-url/issues?q=
[pkg-debug]: https://www.npmjs.com/package/debug
[pkg-debug-wildcards]: https://www.npmjs.com/package/debug#wildcards
[pr-compare]: repo-url/compare
[xpipeline]: https://github.com/Xunnamius/xpipeline#readme
",
  "README.md": "<!-- xscripts-renovate-region-start -->

<p align="center" width="100%">
  <img width="300" src="./repo-name.png">
</p>

<p align="center" width="100%">
<!-- xscripts-renovate-region-end -->
package-description
<!-- xscripts-renovate-region-start -->
</p>

<hr />

badges

<br />

# title-name

<!-- xscripts-renovate-region-end -->

package-description

<!-- xscripts-renovate-region-start -->

<br />

---

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Install](#install)
- [Usage](#usage)
- [Appendix](#appendix)
  - [Published Package Details](#published-package-details)
  - [License](#license)
- [Contributing and Support](#contributing-and-support)
  - [Contributors](#contributors)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

<br />

## Install

<!-- xscripts-renovate-region-end -->

To install repo-name:

\`\`\`shell
npm install package-name
\`\`\`

If you want to use a specific version of repo-name, provide its semver:

\`\`\`shell
npm install package-name@1.2.3
\`\`\`

## Usage

<!-- TODO -->

TODO

<!-- xscripts-renovate-region-start -->

## Appendix

Further documentation can be found under [\`docs/\`](repo-reference-docs).

### Published Package Details

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-short-1

---‚úÑ---

package-build-details-short-2

---‚úÑ---

package-build-details-short-3

---‚úÑ---

package-build-details-short-4

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

<details><summary>Expand details</summary>

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-long-1

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

</details>

### License

See [LICENSE](repo-reference-license).

## Contributing and Support

**[New issues](repo-reference-new-issue) and
[pull requests](repo-reference-pr-compare) are always welcome and greatly
appreciated! ü§©** Just as well, you can
[star üåü this project](repo-reference-self) to let me know you found it useful!
‚úäüèø Or you could consider [buying me a beer](repo-reference-sponsor). Thank you!

See [CONTRIBUTING.md](repo-reference-contributing) and
[SUPPORT.md](repo-reference-support) for more information.

### Contributors

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->

[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)

<!-- ALL-CONTRIBUTORS-BADGE:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

Thanks goes to these wonderful people
([emoji key](repo-reference-all-contributors-emojis)):

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<table></table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

This project follows the [all-contributors](repo-reference-all-contributors)
specification. Contributions of any kind welcome!

<!-- xscripts-renovate-region-end -->
<!-- xscripts-renovate-region-definitions -->

repo-reference-definitions-badge

repo-reference-definitions-package

repo-reference-definitions-repo
",
  "SECURITY.md": "# Security ‚ò†Ô∏è [![Known Vulnerabilities][2]][1]

If the issue is related to a public alert from OWASP/GitHub/Dependabot/CVE/etc
and [does not already have an open issue][3], feel free to [open a new
issue][4]. Otherwise, please report any security vulnerability or other
security-related incident or sensitive subject to us [via private vulnerability
disclosure through GitHub][5] or, if that fails, [via email][6].

Thank you for your contribution!

[1]: repo-snyk-url
[2]: repo-snyk-url/badge.svg
[3]: repo-url/issues?q=
[4]: repo-url/issues/new/choose
[5]:
  https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability#privately-reporting-a-security-vulnerability
[6]:
  mailto:security@ergodark.com?subject=ALERT%3A%20SECURITY%20INCIDENT%3A%20%28five%20word%20summary%29
",
}
`;

exports[`::gatherAssetsFromTransformer <config assets> all-contributors: /dummy/.all-contributorsrc 1`] = `
"key: /dummy/.all-contributorsrc
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  "projectName": "package-name",
  "projectOwner": "Xunnamius",
  "repoType": "github",
  "repoHost": "https://github.com",
  "files": [
    "README.md"
  ],
  "imageSize": 100,
  "commit": false,
  "commitConvention": "angular",
  "contributors": [
    {
      "login": "Xunnamius",
      "name": "Bernard",
      "avatar_url": "https://avatars.githubusercontent.com/u/656017?v=4",
      "profile": "https://xunn.io/",
      "contributions": [
        "infra",
        "code",
        "doc",
        "maintenance",
        "test",
        "review"
      ]
    }
  ],
  "contributorsPerLine": 7,
  "linkToUsage": true
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> architecture (markdown): /dummy/ARCHITECTURE.md 1`] = `
"key: /dummy/ARCHITECTURE.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
<!-- xscripts-renovate-region-start -->

# üìê Project Architecture

Before continuing with this document, see the document on the [generic project
architecture][1] expected by projects (like this repository) that leverage
[xscripts][2].

What follows are any notable additions and/or deviations from the aforementioned
document.

<br />

---

<!-- xscripts-renovate-region-end -->

There are as of yet no notable deviations or additions. See the linked document
(above) for information on the architecture of this project.

<!-- xscripts-renovate-region-definitions -->

[1]: https://github.com/Xunnamius/xscripts/wiki/Generic-Project-Architecture
[2]: https://github.com/Xunnamius/xscripts
"
`;

exports[`::gatherAssetsFromTransformer <config assets> babel: /dummy/babel.config.cjs 1`] = `
"key: /dummy/babel.config.cjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

const { deepMergeConfig } = require('@-xun/scripts/assets');

const {
  moduleExport,
  assertEnvironment
} = require('@-xun/scripts/assets/babel.config.cjs');

// TODO: publish latest rejoinder package first, then update configs to use it
//const { createDebugLogger } = require('rejoinder');

/*const debug = createDebugLogger({ namespace: 'xscripts:config:babel' });*/

module.exports = deepMergeConfig(
  moduleExport({
    derivedAliases: getBabelAliases(),
    ...assertEnvironment({ projectRoot: __dirname })
  }),
  /**
   * @type {import('@-xun/scripts/assets/babel.config.cjs').BabelConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport's result
  }
);

/*debug('exported config: %O', module.exports);*/

function getBabelAliases() {
  // ! The aliases described in "paths" are auto-generated by xscripts.
  // ! Instead of modifying it directly, consider regenerating aliases
  // ! across the entire project with: \`npx xscripts project renovate
  // ! --regenerate-aliases\`
  // * These aliases appear in:
  // *   - tsconfig.json      (JSON)
  // *   - babel.config.cjs   (CJS)
  // *   - eslint.config.mjs  (ESM)
  // *   - jest.config.mjs    (ESM)
  // *   - next.config.mjs    (ESM)
  // *   - webpack.config.mjs (ESM)
  return {
    "^universe:(.+)$": "./src/$1",
    "^universe$": "./src/index.js",
    "^multiverse+webpack:(.+)$": "./packages/webpack/src/$1",
    "^multiverse+unnamed-esm:(.+)$": "./packages/unnamed-esm/src/$1",
    "^multiverse+unnamed-cjs:(.+)$": "./packages/unnamed-cjs/src/$1",
    "^multiverse+private:(.+)$": "./packages/private/src/$1",
    "^multiverse+cli:(.+)$": "./packages/cli/src/$1",
    "^multiverse+webpack$": "./packages/webpack/src/index.js",
    "^multiverse+unnamed-esm$": "./packages/unnamed-esm/src/index.js",
    "^multiverse+unnamed-cjs$": "./packages/unnamed-cjs/src/index.js",
    "^multiverse+private$": "./packages/private/src/index.js",
    "^multiverse+cli$": "./packages/cli/src/index.js",
    "^rootverse+webpack:(.+)$": "./packages/webpack/$1",
    "^rootverse+unnamed-esm:(.+)$": "./packages/unnamed-esm/$1",
    "^rootverse+unnamed-cjs:(.+)$": "./packages/unnamed-cjs/$1",
    "^rootverse+private:(.+)$": "./packages/private/$1",
    "^rootverse+cli:(.+)$": "./packages/cli/$1",
    "^rootverse:(.+)$": "./$1",
    "^testverse+webpack:(.+)$": "./packages/webpack/test/$1",
    "^testverse+unnamed-esm:(.+)$": "./packages/unnamed-esm/test/$1",
    "^testverse+unnamed-cjs:(.+)$": "./packages/unnamed-cjs/test/$1",
    "^testverse+private:(.+)$": "./packages/private/test/$1",
    "^testverse+cli:(.+)$": "./packages/cli/test/$1",
    "^testverse:(.+)$": "./test/$1",
    "^typeverse:(.+)$": "./types/$1"
  },
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> browserslist: /dummy/.browserslistrc 1`] = `
"key: /dummy/.browserslistrc
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
[production]
last 2 versions
>0.2%
not dead

[development]
last 2 versions
>0.2%
not dead

[test]
current node
"
`;

exports[`::gatherAssetsFromTransformer <config assets> changelog.patch.mjs: /dummy/changelog.patch.mjs 1`] = `
"key: /dummy/changelog.patch.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check

/**
 * @type {import('@-xun/scripts/commands/build/changelog').ChangelogPatches}
 */
export default [
  ///// ? Oops
  //[/ --file /g, ' --files '],
  //['--output-file', '--changelog-file'],
];
"
`;

exports[`::gatherAssetsFromTransformer <config assets> codecov: /dummy/.codecov.yml 1`] = `
"key: /dummy/.codecov.yml
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
coverage:
  range: '75...100'
  status:
    project:
      default:
        informational: true
    patch:
      default:
        informational: true
# * Well-known flag syntax: package.<branch>_<package-id>
# * <package>-id will be the WorkspacePackageId or "root" for RootPackages
flag_management:
  # * These rules will apply to all non-specially-configured flags
  default_rules:
    carryforward: true
    statuses:
      - type: project
        target: auto
      - type: patch
        target: auto
"
`;

exports[`::gatherAssetsFromTransformer <config assets> commit-spell: /dummy/.spellcheckignore 1`] = `
"key: /dummy/.spellcheckignore
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂

"
`;

exports[`::gatherAssetsFromTransformer <config assets> commitlint.config.mjs: /dummy/commitlint.config.mjs 1`] = `
"key: /dummy/commitlint.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } = from '@-xun/scripts/assets';
import { moduleExport } = from '@-xun/scripts/assets/commitlint.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } = from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:commitlint' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> contributing (markdown): /dummy/CONTRIBUTING.md 1`] = `
"key: /dummy/CONTRIBUTING.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# Contributing

Hi there! First off, we're thrilled ü§© you want contribute to this project!

First time contributor to a GitHub project? If you could use some help getting
started, [take a look at this quick and easy guide][how-to-contribute]. üíú

## Briefly: Submitting a Pull Request (Pr)

> See also: [CODE_OF_CONDUCT.md][code-of-conduct]

This repository uses a [fully automated][github-actions] [continuous
linting][husky-cl] (CL), integration testing (CI), and deployment (CD)
[xpipeline][xpipeline]-based pipeline for integrating PRs and publishing
releases. The neat thing about a fully automated pipeline is that anyone
anywhere can make a contribution quickly and with minimal tedium.

This repository makes extensive use of [debug][pkg-debug]. Should you wish to
view all possible debugging output, [export
\`DEBUG='*,*:*'\`][pkg-debug-wildcards].

The ideal contributor flow is as follows:

1. [Fork][fork] this repository and [clone it locally][how-to-clone].
   - If there is a custom Docker image available for this project and you're
     comfortable with Docker, consider using it instead.
2. Configure and install dependencies with \`npm ci\`.
   - You use \`npm ci\` here instead of \`npm install\` to [prevent unnecessary
     updates to \`package.json\` and \`package-lock.json\`][npm-ci], but if it makes
     more sense to use \`npm install\` feel free to use that instead.
     - **If you're getting an EINTEGRITY error from npm, you need to delete
       package-lock.json before running \`npm install\` (not \`npm ci\`).**
   - If \`.env.example\` exists, consider copying it to \`.env\` and configuring
     sensible defaults.
3. Before making any changes, ensure all unit tests are passing with
   \`npm run test\`.
4. _(optional but recommended)_ Create a new branch, usually off \`main\`.
   - Example: \`git checkout -b contrib-feature-1\`.
5. Make your changes and commit. Your work will be checked as you commit; any
   problems will abort the commit/push attempt.
   - Ensure any new tests still pass even when the \`DEBUG\` environment variable
     is defined.
6. Push your commits to your fork and, when you're ready, [_fearlessly_ submit
   your PR][pr-compare]! Your changes will be tested in our CI pipeline.
7. Pat yourself on the back! Your hard work is well on its way to being reviewed
   and, if everything looks good, merged and released üöÄ

Additionally, there are a few things you can do to greatly increase the
likelihood your PR passes review:

- **Do** [open an issue][choose-new-issue] and discuss your proposed changes (to
  prevent wasting your valuable time, e.g. _maybe we're already working on a
  fix!_), and [search][open-issues] to see if there are any existing issues
  related to your concerns.
- **Do** practice [atomic committing][atomic-commits].
- **Do not** reduce code coverage ([codecov][codecov] checks are performed
  during CI).
- **Do** [follow convention][conventional-commits] when coming up with your
  commit messages.
- **Do not** circumvent CL, i.e. automated pre-commit linting, formatting, and
  unit testing.
- **Do** ensure \`README.md\` and other documentation that isn't autogenerated is
  kept consistent with your changes.
- **Do not** create a PR to introduce [_purely_ cosmetic
  commits][cosmetic-commits].
  - Code de-duplication and other potential optimizations we **do not** consider
    _purely_ cosmetic üôÇ
- **Do** keep your PR as narrow and focused as possible.
  - If you ran \`npm install\` instead of \`npm ci\` and it updated \`package.json\`
    or \`package-lock.json\` and those updates have nothing to do with your PR
    (e.g. random nested deps were updated), **do not** stage changes to those
    files.
  - If there are multiple related changes to be made but (1) they do not
    immediately depend on one another or (2) one implements extended/alternative
    functionality based on the other, consider submitting them as separate PRs
    instead.

At this point, you're ready to create your PR and ‚ú® contribute ‚ú®!

[atomic-commits]: https://www.codewithjason.com/atomic-commits-testing
[choose-new-issue]: repo-url/issues/new/choose
[code-of-conduct]: repo-url/.github/CODE_OF_CONDUCT.md
[codecov]: https://about.codecov.io
[conventional-commits]: https://www.conventionalcommits.org/en/v1.0.0#summary
[cosmetic-commits]:
  https://github.com/rails/rails/pull/13771#issuecomment-32746700
[fork]: repo-url/fork
[github-actions]: https://github.com/features/actions
[how-to-clone]:
  https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository
[how-to-contribute]: https://www.dataschool.io/how-to-contribute-on-github
[husky-cl]: repo-url/tree/main/.husky
[npm-ci]: https://docs.npmjs.com/cli/v6/commands/npm-ci
[open-issues]: repo-url/issues?q=
[pkg-debug]: https://www.npmjs.com/package/debug
[pkg-debug-wildcards]: https://www.npmjs.com/package/debug#wildcards
[pr-compare]: repo-url/compare
[xpipeline]: https://github.com/Xunnamius/xpipeline#readme
"
`;

exports[`::gatherAssetsFromTransformer <config assets> dotenv (default): /dummy/.env 1`] = `
"key: /dummy/.env
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
CODECOV_TOKEN=
GITHUB_TOKEN=
NPM_TOKEN=
GIT_AUTHOR_NAME=
GIT_COMMITTER_NAME=
GIT_AUTHOR_EMAIL=
GIT_COMMITTER_EMAIL=
GPG_PASSPHRASE=
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <config assets> dotenv (default): /dummy/.env 2`] = `
"key: /dummy/.env
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
CODECOV_TOKEN=
GITHUB_TOKEN=
NPM_TOKEN=
GIT_AUTHOR_NAME=
GIT_COMMITTER_NAME=
GIT_AUTHOR_EMAIL=
GIT_COMMITTER_EMAIL=
GPG_PASSPHRASE=
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <config assets> dotenv (default): /dummy/.env.default 1`] = `
"key: /dummy/.env.default
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <config assets> dotenv (default): /dummy/.env.default 2`] = `
"key: /dummy/.env.default
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <config assets> editor-config: /dummy/.editorconfig 1`] = `
"key: /dummy/.editorconfig
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
root = true

[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8
indent_style = space
indent_size = 2
"
`;

exports[`::gatherAssetsFromTransformer <config assets> eslint: /dummy/eslint.config.mjs 1`] = `
"key: /dummy/eslint.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check

import { deepMergeConfig } from '@-xun/scripts/assets.ts';

import {
  moduleExport,
  assertEnvironment
} from '@-xun/scripts/assets/eslint.config.mjs';

// TODO: publish latest rejoinder package first, then update configs to use it
/*import { createDebugLogger } from 'rejoinder';*/

/*const debug = createDebugLogger({ namespace: 'xscripts:config:eslint' });*/

const config = deepMergeConfig(
  moduleExport({ derivedAliases: getEslintAliases(), ...assertEnvironment() }),
  /**
   * @type {import('@-xun/scripts/assets/eslint.config.mjs').EslintConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport
  }
);

export default config;

/*debug('exported config: %O', config);*/

function getEslintAliases() {
  // ! The aliases described in "paths" are auto-generated by xscripts.
  // ! Instead of modifying it directly, consider regenerating aliases
  // ! across the entire project with: \`npx xscripts project renovate
  // ! --regenerate-aliases\`
  // * These aliases appear in:
  // *   - tsconfig.json      (JSON)
  // *   - babel.config.cjs   (CJS)
  // *   - eslint.config.mjs  (ESM)
  // *   - jest.config.mjs    (ESM)
  // *   - next.config.mjs    (ESM)
  // *   - webpack.config.mjs (ESM)
  return [
    [
        "universe:*",
        "./src/*"
    ],
    [
        "universe",
        "./src/index.ts"
    ],
    [
        "multiverse+webpack:*",
        "./packages/webpack/src/*"
    ],
    [
        "multiverse+unnamed-esm:*",
        "./packages/unnamed-esm/src/*"
    ],
    [
        "multiverse+unnamed-cjs:*",
        "./packages/unnamed-cjs/src/*"
    ],
    [
        "multiverse+private:*",
        "./packages/private/src/*"
    ],
    [
        "multiverse+cli:*",
        "./packages/cli/src/*"
    ],
    [
        "multiverse+webpack",
        "./packages/webpack/src/index.ts"
    ],
    [
        "multiverse+unnamed-esm",
        "./packages/unnamed-esm/src/index.ts"
    ],
    [
        "multiverse+unnamed-cjs",
        "./packages/unnamed-cjs/src/index.ts"
    ],
    [
        "multiverse+private",
        "./packages/private/src/index.ts"
    ],
    [
        "multiverse+cli",
        "./packages/cli/src/index.ts"
    ],
    [
        "rootverse+webpack:*",
        "./packages/webpack/*"
    ],
    [
        "rootverse+unnamed-esm:*",
        "./packages/unnamed-esm/*"
    ],
    [
        "rootverse+unnamed-cjs:*",
        "./packages/unnamed-cjs/*"
    ],
    [
        "rootverse+private:*",
        "./packages/private/*"
    ],
    [
        "rootverse+cli:*",
        "./packages/cli/*"
    ],
    [
        "rootverse:*",
        "./*"
    ],
    [
        "testverse+webpack:*",
        "./packages/webpack/test/*"
    ],
    [
        "testverse+unnamed-esm:*",
        "./packages/unnamed-esm/test/*"
    ],
    [
        "testverse+unnamed-cjs:*",
        "./packages/unnamed-cjs/test/*"
    ],
    [
        "testverse+private:*",
        "./packages/private/test/*"
    ],
    [
        "testverse+cli:*",
        "./packages/cli/test/*"
    ],
    [
        "testverse:*",
        "./test/*"
    ],
    [
        "typeverse:*",
        "./types/*"
    ]
  },
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> git-add-then-commit: /dummy/gac.config.mjs 1`] = `
"key: /dummy/gac.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/gac.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:gac' });*/

const config = deepMergeConfig(moduleExport(),
/**
 * @type {import('@-xun/scripts/assets/gac.config.mjs').GacConfig}
 */
{
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> git-attributes: /dummy/.gitattributes 1`] = `
"key: /dummy/.gitattributes
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
* text=auto eol=lf
"
`;

exports[`::gatherAssetsFromTransformer <config assets> git-ignore: /dummy/.gitignore 1`] = `
"key: /dummy/.gitignore
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# ! Note that any pattern with a / in the beginning OR MIDDLE (but not end) will
# ! be consider relative to the this file ONLY. Matching subdirs will NOT match!
# ! Otherwise, patterns will match entities in any directory or subdirectory.
# ! Prepend ** (or **/) if advanced subdir matching of complex paths is desired.
# ! See https://git-scm.com/docs/gitignore#_pattern_format

# Ignore temporary files in any subdir by giving them a special name
*.ignore
*.ignore.*
ignore.*
tmp

# Ignore sensitive files in any subdir
.env
.npmrc
*.local

# Ignore transpiled source in any subdir (used for advanced debugging)
.transpiled

# Ignore packaged files that probably shouldn't be committed
*.tgz

# Ignore relevant build artifacts in any subdir (with exceptions)
*.tsbuildinfo
# ? Preceding asterisks "**/" are needed to match any build subdir in monorepos
# ? and proceeding asterisks "/**" allow subsequent negations to be interpreted
# ? properly. See: https://git-scm.com/docs/gitignore#_pattern_format
**/build/**
# ? This and other negations must end in "/**" to be interpreted properly.
!**/src/**/build/**
# ? This and other negations must end in "/**" to be interpreted properly.
!**/docs/**/build/**
dist
coverage
lib-cov
.nyc_output
.grunt
bower_components
.lock-wscript
build/Release
.vercel
.next
next-env.d.ts

# Ignore cloned GitHub wiki (do not regard it as a so-called "submodule")
# ? Note that this complex path is relative to this file
/.wiki

# Ignore local vscode configuration
# ? Note that this complex path is relative to this file
/.vscode/**
# ? Note that this complex path is relative to this file
!/.vscode/*.example.json

# Ignore relevant NPM and JSPM artifacts in any subdir
.npm
node_modules
jspm_packages

# Ignore logs in any subdir
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Ignore random nothingness in any subdir
.eslintcache
.node_repl_history
.yarn-integrity
*.DS_Store
.AppleDouble
.LSOverride
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
pids
*.pid
*.seed
*.pid.lock
Thumbs.db
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN
*.cab
*.msi
*.msm
*.msp
*.lnk
_book
CertificateAuthorityCertificate.pem
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/CODE_OF_CONDUCT.md 1`] = `
"key: /dummy/.github/CODE_OF_CONDUCT.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# Contributor Covenant Code of Conduct

## Our Pledge

In the interest of fostering an open and welcoming environment, we as
contributors and maintainers pledge to making participation in our project and
our community a harassment-free experience for everyone, regardless of age, body
size, disability, ethnicity, sex characteristics, gender identity and
expression, level of experience, education, socioeconomic status, nationality,
personal appearance, race, religion, or sexual identity and orientation.

## Our Standards

Examples of behavior that contributes to creating a positive environment
include:

- Using welcoming and inclusive language.
- Being respectful of differing viewpoints and experiences.
- Gracefully accepting constructive criticism.
- Focusing on what is best for the community.
- Showing empathy towards other community members.

Examples of unacceptable behavior by participants include:

- Racism or sexism in any shape or form.
- The use of sexualized language or imagery and unwelcome sexual attention or
  advances.
- Trolling, insulting/derogatory comments, and personal or political attacks.
- Public or private harassment.
- Publishing others' private information, such as a physical or electronic
  address, without explicit permission.
- Other conduct which could reasonably be considered inappropriate in a
  professional setting.

## Our Responsibilities

Project maintainers are responsible for clarifying the standards of acceptable
behavior and are expected to take appropriate and fair corrective action in
response to any instances of unacceptable behavior.

Project maintainers have the right and responsibility to remove, edit, or reject
comments, commits, code, wiki edits, issues, and other contributions that are
not aligned to this Code of Conduct, or to ban temporarily or permanently any
contributor for other behaviors that they deem inappropriate, threatening,
offensive, or harmful.

## Scope

This Code of Conduct applies both within project spaces and in public spaces
when an individual is representing the project or its community. Examples of
representing a project or community include using an official project e-mail
address, posting via an official social media account, or acting as an appointed
representative at an online or offline event. Representation of a project may be
further defined and clarified by project maintainers.

## Enforcement

Instances of abusive, harassing, or otherwise unacceptable behavior may be
reported by contacting the project team at
[Xunnamius@users.noreply.github.com][1]. All complaints will be reviewed and
investigated and will result in a response that is deemed necessary and
appropriate to the circumstances. The project team is obligated to maintain
confidentiality with regard to the reporter of an incident. Further details of
specific enforcement policies may be posted separately.

Project maintainers who do not follow or enforce the Code of Conduct in good
faith may face temporary or permanent repercussions as determined by other
members of the project's leadership.

## Attribution

This Code of Conduct is adapted from the [Contributor Covenant][homepage],
version 1.4, available at
[https://www.contributor-covenant.org/version/1/4/code-of-conduct.html][2]

For answers to common questions about this code of conduct, see
[https://www.contributor-covenant.org/faq][3]

[homepage]: https://www.contributor-covenant.org
[1]: mailto:Xunnamius@users.noreply.github.com
[2]: https://www.contributor-covenant.org/version/1/4/code-of-conduct.html
[3]: https://www.contributor-covenant.org/faq
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/CODEOWNERS 1`] = `
"key: /dummy/.github/CODEOWNERS
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# See https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-code-owners

*   @Xunnamius
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/FUNDING.yml 1`] = `
"key: /dummy/.github/FUNDING.yml
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# These are supported funding model platforms

github: [Xunnamius]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: # Replace with a single Ko-fi username
tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
otechie: # Replace with a single Otechie username
lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/ISSUE_TEMPLATE/BUG_REPORT.md 1`] = `
"key: /dummy/.github/ISSUE_TEMPLATE/BUG_REPORT.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
---
name: ü§Ø Bug report
about: Alert us about an issue
labels: bug
---

<!-- THANK YOU for taking a moment to improve this project. ü§òüèø You rock! üé∏ -->

<details open><summary><strong>The problem</strong></summary>

<!--
üö© Required (1 of 2): please replace this comment with a clear and concise
description of your issue. If applicable, add code samples and relevant error
log lines to help explain the problem. Favor code samples over code screenshots.
-->

</details>

<details><summary><strong>Reproduction steps</strong></summary>

<!--
üö© Required (2 of 2): please replace this comment with a link to a repo
demonstrating your issue *using as few lines of code as possible*. If we can't
reproduce the problem on our side, how can we ever hope to fix it for you ü§∑üèæ?

If your issue is simple enough that it doesn't warrant a demo repo, include
instead the simplest most basic possible steps to reproduce your problem; e.g.:

1. Clone the dummy repo I made: https://github.com/‚Ä¶
2. Run \`npm install\`
3. Run \`npx jest\`
4. See error "xyz" at test 2, which shouldn't be happening
-->

</details>

<!--
<details><summary><strong>Expected behavior</strong></summary>

Optional: uncomment this block and replace this text with a clear and concise
description of what you expected to happen if not included above. If applicable,
add screenshots and code samples to help explain the problem.

</details>
|-->

<!--
<details><summary><strong>Suggested solution</strong></summary>

Optional: uncomment this block and replace this text with a clear and concise
proposal of how your issue might be solved, including any unnoted workarounds.
If applicable, add code samples and screenshots.

</details>
|-->

<!--
<details><summary><strong>Additional context</strong></summary>

Optional: uncomment this block and replace this text with any additional
information that might help us figure out what's going on. This could be dense
runtime details, lengthy error logs, assets links, or what have you; e.g.:

- OS: ubuntu 26.04
- Node version: 20
- Babel: yes, version 8.1.0
- TypeScript: yes, version 5.2.0
- Browser: firefox 171, chrome 190
- List of installed packages: https://github.com/‚Ä¶/main/package.json

Relevant log lines:
\`\`\`
(super long error log lines pasted here)
\`\`\`

</details>
-->
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/ISSUE_TEMPLATE/FEATURE_REQUEST.md 1`] = `
"key: /dummy/.github/ISSUE_TEMPLATE/FEATURE_REQUEST.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
---
name: ü§© Feature request
about: Tell us about your awesome idea
labels: enhancement
---

<!-- THANK YOU for taking a moment to improve this project. ü§òüèø You rock! üé∏ |-->

<!--
Replace this comment with a clear and concise description of what you're
suggesting. Be sure to include sample code, screenshots, related PR/issue
links, etc.

üö© If you encountered a bug, please report it as a bug instead of a feature
request.
|-->

<!--
<details><summary><strong>Alternatives and workarounds</strong></summary>

For posterity, uncomment this block and replace this text with a clear and
concise description of any alternative solutions you've encountered or any
temporary workarounds you've come up with.

</details>
-->
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/ISSUE_TEMPLATE/config.yml 1`] = `
"key: /dummy/.github/ISSUE_TEMPLATE/config.yml
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
blank_issues_enabled: true
contact_links:
  - name: Security Channel
    url: 'mailto:security@ergodark.com?subject=SECURITY%20INCIDENT%3A%20%28five%20word%20summary%29'
    about: Report security-related issues here!
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/PULL_REQUEST_TEMPLATE.md 1`] = `
"key: /dummy/.github/PULL_REQUEST_TEMPLATE.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
<!-- Add a brief description of your PR here |-->

<!-- If this PR closes any issues, please enumerate them; i.e. "Closes #4" |-->

<!-- If this PR involves or references any other issues, list them as well -->

---

<!-- Replace \`[ ]\` with \`[x]\` in all the following boxes that apply to you -->

- [ ] I have read **[CONTRIBUTING.md][1]**.
- [ ] This PR is not security related (see [SECURITY.md][2]).

[1]: /CONTRIBUTING.md
[2]: /SECURITY.md
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/SUPPORT.md 1`] = `
"key: /dummy/.github/SUPPORT.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# Support [![Average issue resolution time][badge-issue-resolution]][link-issue-resolution] [![Issue open percentage][badge-issue-percentage]][open-issues]

Need help? Want to help this project? See below!

## Reporting an Issue

Before you begin, please [search open and past issues][open-issues] to see if
your issue or feature request is already being talked about.

If you find your issue already exists, make sure to [bump the issue by adding a
reaction][github-blog]. **If you're serious about wanting an issue to get
attention, use a reaction in place of a "+1" or other similar comment.**

If you cannot find an existing issue that describes your bug or feature, then
you're clear to create your issue using the guidelines below.

### Standard Reactions

Analysis of issue popularity (by tooling or otherwise) relies on the following
reaction emojis being present on issues, PRs, and replies:

\`:+1:\` üëçüèøüëçüèæüëçüèΩüëçüèºüëçüèªüëç ‚Äî up vote (AKA: _approve_, _like_, _+1_)

\`:-1:\` üëéüèøüëéüèæüëéüèΩüëéüèºüëéüèªüëé ‚Äî down vote (AKA: _disapprove_, _dislike_, _-1_)

### Bug Reports and Feature Requests

For the timeliest resolution to bug reports specifically, please make a good
faith effort to [follow the template][choose-new-issue]. The more quality
information you can provide, the quicker a fix will be found. Additionally:

- Ensure you file one issue per problem or feature request.
- Do not enumerate multiple bugs or feature requests in the same issue.
- Do not add your issue as a comment to an existing issue unless you're
  experiencing identical behavior or behavior that stems from the exact same
  problem.

That's it! You are now ready to [submit a new issue][choose-new-issue]! Thank
you for contribution üéâ, your efforts are greatly appreciated! üôåüèø

#### Closure Policy

- Issues that do not follow the appropriate template or contain necessary
  information may be closed immediately and the poster directed to these
  guidelines.
- Issues that go for an extended period without activity are subject to closure.

[badge-issue-percentage]:
  https://isitmaintained.com/badge/open/Xunnamius/repo-name.svg
  'Open issues as a percentage of all issues'
[badge-issue-resolution]:
  https://isitmaintained.com/badge/resolution/Xunnamius/repo-name.svg
  'Average time to resolve an issue'
[choose-new-issue]: repo-url/issues/new/choose
[github-blog]:
  https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments
[link-issue-resolution]:
  https://isitmaintained.com/project/Xunnamius/repo-name
[open-issues]: repo-url/issues?q=
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/dependabot.yml 1`] = `
"key: /dummy/.github/dependabot.yml
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
version: 2
updates:
  - package-ecosystem: github-actions
    directory: /
    schedule:
      interval: daily
    commit-message:
      prefix: 'chore'
      prefix-development: 'chore'
      include: 'scope'

  - package-ecosystem: npm
    directory: /
    schedule:
      interval: daily
    commit-message:
      prefix: 'build'
      prefix-development: 'chore'
      include: 'scope'
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/pipeline.config.js 1`] = `
"key: /dummy/.github/pipeline.config.js
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
 * This object is used to configure the GitHub Actions that comprise the
 * build-test-deploy pipeline. Each property is optional.
 */
module.exports = {
  // * The name and email used to author commits and interact with GitHub.
  // ! This should correspond to the identity of the GH_TOKEN secret.
  // committer: {
  //   name: 'xunn-bot',
  //   email: 'bot@xunn.io'
  // },
  //
  // * Selectively enable debugger verbose output in the pipeline.
  // ? To enable debugging across all source in this repo (excluding
  // ? node_modules) without having to type the package name, use a boolean:
  // debugString: true, // false is treated the same as null/commented out
  // ? Or you can type out a custom debug namespace string instead, e.g.:
  // debugString: '@your-namespace/some-package:*',
  // ? This key can only appear in local pipeline config and not global.
  // ? See also: https://www.npmjs.com/package/debug#wildcards
  // ? For even more debugging tools, see: https://bit.ly/2R6NAdZ
  //
  // * The semver version of node to install and setup before each job.
  // nodeCurrentVersion: '18.x',
  //
  // * Node semver versions to run unit and integration tests against.
  // nodeTestVersions: ['14.x', '16.x'],
  //
  // * Webpack semver versions to run unit and integration tests against.
  // webpackTestVersions: ['5.x'],
  //
  // * Regular expressions for skipping CI/CD. To skip CL, use git with the
  // * \`--no-verify\` option.
  // ciSkipRegex: /\\[skip ci\\]|\\[ci skip\\]/i,
  // cdSkipRegex: /\\[skip cd\\]|\\[cd skip\\]/i,
  //
  // * Should auto-merge be retried on failure even when the PR appears
  // * unmergeable? If \`true\`, uses exponential back-off internally.
  // ! WARNING: leaving this as \`true\` might waste Actions minutes and $$$ in
  // ! private repositories. Watch your usage numbers!
  // canRetryAutomerge: true,
  //
  // * Npm audit will fail upon encountering problems of at least the specified
  // * severity.
  // npmAuditFailLevel: 'high',
  //
  // * Attempt to upload project coverage data to codecov if \`true\`.
  // canUploadCoverage: true,
  //
  // * The maximum amount of time in seconds any "retry"-type operation can
  // * continue retrying. This includes all exponential backoff steps.
  // ! A 5 minute limit is hardcoded into pipeline workflows, so values above
  // ! ~250 might lead to undesirable VM hard stops.
  // retryCeilingSeconds: 180,
  //
  // * How many days GitHub should keep uploaded artifacts around.
  // ! 90 days is GitHub's default, but this should be lowered to 1 day for
  // ! private repos where artifact storage costs $$$.
  // artifactRetentionDays: 90
};
"
`;

exports[`::gatherAssetsFromTransformer <config assets> github (directory): /dummy/.github/workflows/README.md 1`] = `
"key: /dummy/.github/workflows/README.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
Details on pipeline design and operation can be found [here][1].

[1]: https://github.com/Xunnamius/xscripts/wiki
"
`;

exports[`::gatherAssetsFromTransformer <config assets> husky (directory): /dummy/.husky/commit-msg 1`] = `
"key: /dummy/.husky/commit-msg
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
#!/bin/sh

# TODO: make this work natively on Windows

beginswith() { case $2 in "$1"*) true;; *) false;; esac; }

if beginswith 'rebase' "$GIT_REFLOG_ACTION"; then
  echo 'husky-hook::commit-msg: skipped commit-msg hook due to rebase'
  exit 0
fi

NODE_NO_WARNINGS=1 commitlint -e
if [ -z "$GAC_VERIFY_SIMPLE" ]; then npm run test; fi
echo
NODE_NO_WARNINGS=1 node spellcheck-commit.cjs
"
`;

exports[`::gatherAssetsFromTransformer <config assets> husky (directory): /dummy/.husky/pre-commit 1`] = `
"key: /dummy/.husky/pre-commit
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
#!/bin/sh

# TODO: make this work natively on Windows

beginswith() { case $2 in "$1"*) true;; *) false;; esac; }

if beginswith 'rebase' "$GIT_REFLOG_ACTION"; then
  echo 'husky-hook::commit-msg: skipped pre-commit hook due to rebase'
  exit 0
fi

if [ -z "$GAC_VERIFY_SIMPLE" ]; then npm run lint:package; fi
NODE_NO_WARNINGS=1 lint-staged --concurrent false
"
`;

exports[`::gatherAssetsFromTransformer <config assets> husky (directory): /dummy/.husky/pre-push 1`] = `
"key: /dummy/.husky/pre-push
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
#!/bin/sh

# TODO: make this work natively on Windows

beginswith() { case $2 in "$1"*) true;; *) false;; esac; }

if beginswith 'rebase' "$GIT_REFLOG_ACTION"; then
  echo 'husky-hook::pre-push: pushing commits in the middle of a rebase is not allowed!'
  exit 1
fi

echo 'husky-hook::pre-push: checking for commits that should not be pushed...'
log=$(git log HEAD --oneline --not --remotes)

# ? Make sure no commits to be pushed contain "mergeme" in their headers
if echo "$log" | grep -q -i -e 'mergeme' -e '\\[WIP\\]' -e '\\[NOPUSH\\]'; then
  echo 'husky-hook::pre-push: BAD COMMIT(S) DETECTED!'
  echo 'husky-hook::pre-push: merge, delete, reword, or otherwise rectify the following commits before trying again:'
  echo
  echo "$log" | grep -i -e 'mergeme' -e '\\[WIP\\]' -e '\\[NOPUSH\\]'
  echo
  exit 2;
else
  echo 'husky-hook::pre-push: ‚úÖ'
  exit 0;
fi
"
`;

exports[`::gatherAssetsFromTransformer <config assets> jest: /dummy/jest.config.mjs 1`] = `
"key: /dummy/jest.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';

import {
  moduleExport,
  assertEnvironment
} from '@-xun/scripts/assets/jest.config.mjs';

// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:jest' });*/

const config = deepMergeConfig(
  moduleExport({ derivedAliases: getJestAliases(), ...assertEnvironment() }),
  /**
   * @type {import('@-xun/scripts/assets/jest.config.mjs').JestConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport's result
  }
);

export default config;

/*debug('exported config: %O', config);*/

function getJestAliases() {
  // ! The aliases described in "paths" are auto-generated by xscripts.
  // ! Instead of modifying it directly, consider regenerating aliases
  // ! across the entire project with: \`npx xscripts project renovate
  // ! --regenerate-aliases\`
  // * These aliases appear in:
  // *   - tsconfig.json      (JSON)
  // *   - babel.config.cjs   (CJS)
  // *   - eslint.config.mjs  (ESM)
  // *   - jest.config.mjs    (ESM)
  // *   - next.config.mjs    (ESM)
  // *   - webpack.config.mjs (ESM)
  return {
    "^universe:(.+)$": "<rootDir>/src/$1",
    "^universe$": "<rootDir>/src/index.ts",
    "^multiverse+webpack:(.+)$": "<rootDir>/packages/webpack/src/$1",
    "^multiverse+unnamed-esm:(.+)$": "<rootDir>/packages/unnamed-esm/src/$1",
    "^multiverse+unnamed-cjs:(.+)$": "<rootDir>/packages/unnamed-cjs/src/$1",
    "^multiverse+private:(.+)$": "<rootDir>/packages/private/src/$1",
    "^multiverse+cli:(.+)$": "<rootDir>/packages/cli/src/$1",
    "^multiverse+webpack$": "<rootDir>/packages/webpack/src/index.ts",
    "^multiverse+unnamed-esm$": "<rootDir>/packages/unnamed-esm/src/index.ts",
    "^multiverse+unnamed-cjs$": "<rootDir>/packages/unnamed-cjs/src/index.ts",
    "^multiverse+private$": "<rootDir>/packages/private/src/index.ts",
    "^multiverse+cli$": "<rootDir>/packages/cli/src/index.ts",
    "^rootverse+webpack:(.+)$": "<rootDir>/packages/webpack/$1",
    "^rootverse+unnamed-esm:(.+)$": "<rootDir>/packages/unnamed-esm/$1",
    "^rootverse+unnamed-cjs:(.+)$": "<rootDir>/packages/unnamed-cjs/$1",
    "^rootverse+private:(.+)$": "<rootDir>/packages/private/$1",
    "^rootverse+cli:(.+)$": "<rootDir>/packages/cli/$1",
    "^rootverse:(.+)$": "<rootDir>/$1",
    "^testverse+webpack:(.+)$": "<rootDir>/packages/webpack/test/$1",
    "^testverse+unnamed-esm:(.+)$": "<rootDir>/packages/unnamed-esm/test/$1",
    "^testverse+unnamed-cjs:(.+)$": "<rootDir>/packages/unnamed-cjs/test/$1",
    "^testverse+private:(.+)$": "<rootDir>/packages/private/test/$1",
    "^testverse+cli:(.+)$": "<rootDir>/packages/cli/test/$1",
    "^testverse:(.+)$": "<rootDir>/test/$1",
    "^typeverse:(.+)$": "<rootDir>/types/$1"
  },
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> license (markdown): /dummy/LICENSE 1`] = `
"key: /dummy/LICENSE
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
MIT License

Copyright (c) 2024 Bernard Dickens III

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"
`;

exports[`::gatherAssetsFromTransformer <config assets> lint-staged: /dummy/lint-staged.config.mjs 1`] = `
"key: /dummy/lint-staged.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/lint-staged.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:lint-staged' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> maintaining (markdown): /dummy/MAINTAINING.md 1`] = `
"key: /dummy/MAINTAINING.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# Maintaining

This is documentation for maintainers of this project.

## Code of Conduct

Please [review][1], understand, and be an example of it. Violations of the code
of conduct are taken seriously, even (especially) for maintainers.

## Issues

We want to support and build the community. We do that best by helping people
learn to solve their own problems. We have an issue template and hopefully most
folks follow it. If it's not clear what the issue is, invite them to create a
minimal reproduction of what they're trying to accomplish or the bug they think
they've found.

Once it's determined that a code change is necessary, point people to
[makeapullrequest.com][2] and invite them to make a pull request. If they're the
one who needs the feature, they're the one who can build it. If they need some
hand holding and you have time to lend a hand, please do so. It's an investment
into another human being, and an investment into a potential maintainer.

Remember that this is open source, so the code is not yours, it's ours. If
someone needs a change in the codebase, you don't have to make it happen
yourself. Commit as much time to the project as you want/need to. Nobody can ask
any more of you than that.

## Pull Requests

As a maintainer, you're fine to make your branches on the main repo or on your
own fork. Either way is fine.

When we receive a pull request, a GitHub Actions build is kicked off
automatically (see [\`.github/workflows\`][3]). We usually avoid merging anything
that fails our Actions workflows.

Please review PRs and focus on the code rather than the individual. You never
know when this is someone's first ever PR and we want their experience to be as
positive as possible, so be uplifting and constructive.

When you merge the pull request, you should do so via either the [rebase and
merge][4] or [squash and merge][5] features. This keeps our git history clean.

If commit messages need to be adjusted, maintainers should force push new
commits with adjusted messages to the PR branch before merging it in.

> [!CAUTION]
>
> **Always favor rebase over squash for large and/or complex contributions**
> since squashing commits may damage the [generated][6] [CHANGELOG.md][7],
> hinder [bisection][8], yield [non-atomic commits][9], and could even result in
> [the wrong version][26] being [released][10].

## Releases

Our releases are automatic. They happen whenever certain commits are pushed to a
relevant branch. That means a new release is generated only when there are
useful changes to justify it. See [the release rules][11] for a list of commit
types that trigger releases.

To generate a new release, a GitHub Actions build gets kicked off and, if it's
successful, [xrelease][10] is used to automatically publish a new release to npm
and GitHub along with an updated changelog. xrelease determines whether a
release is necessary, and what the new version number will be, by analyzing git
commit messages. With this in mind, **it is imperative you brush up on [the
commit message convention][25] which drives our releases.**

> [!IMPORTANT]
>
> **UNDER NO CIRCUMSTANCES** should any of your commit messages contain the
> strings \`BREAKING:\`, \`BREAKING CHANGE:\`, or \`BREAKING CHANGES:\` unless the
> goal is to release a new major version.

### Manual Releases

This project employs an automated CI/CD release pipeline. However, sometimes
things get messed up (e.g. CI workflow / GitHub Actions breaks) and we need to
trigger a release ourselves. When this happens, xrelease can be triggered
locally.

> [!CAUTION]
>
> Note that any manual releases generated outside of the CI/CD pipeline will be
> published [_without established provenance_][21]! It is for that reason that,
> outside of truly exceptional events, manual releases should be avoided at all
> costs.

#### Preparing Repository for Release

Before proceeding with a manual release, first ensure all dependencies are
installed and all necessary secrets are available.

> [!TIP]
>
> You only need to run the following commands if you have not run \`npm install\`
> at least once.

> [!IMPORTANT]
>
> These command should only be run at the project root level and not in any
> individual package root.

\`\`\`bash
# 1. Install dependencies and add your auth tokens to the .env file.
#
# ! DO NOT COMMIT THE .env FILE !
cp .env.default .env
npm ci
\`\`\`

#### Manual Release Method 1: Semi-Automated

To release all packages in a repository:

\`\`\`bash
# Do a Turbo dry run first:
npx turbo release --dry-run
# Then do the actual Turbo-based release:
npx turbo release
\`\`\`

To release one or more specific packages:

\`\`\`bash
# Do a Turbo dry run first:
npx turbo release --filter=pkg-1 --filter=pkg-2 --dry-run
# Then do the actual Turbo-based release:
npx turbo release --filter=pkg-1 --filter=pkg-2
\`\`\`

#### Manual Release Method 2: By Hand

> [!WARNING]
>
> Note that, in a monorepo/hybridrepo, relying on these commands to manually cut
> a release may result in a non-functional package being released if said
> package depends on other packages in the project that have unreleased changes.
>
> [Turbo][24] solves this problem and should be preferred over building packages
> by hand.

There are two ways to execute the release procedure by hand. The first is by
leveraging the release script:

\`\`\`bash
# Do a xscripts dry run first:
npm run release -- --dry-run
# Then do the actual xscripts-based release:
npm run release
\`\`\`

> [!NOTE]
>
> See \`npx xscripts release --help\` for more options.

The second way is by running the following npm scripts in the specified order:

> [!WARNING]
>
> If one of these steps fails, you should address the failure before running the
> next step.

> [!TIP]
>
> These commands should be run with the root of the individual package you're
> trying to release as the current working directory. Using \`npm -w\` also works.

\`\`\`bash
# 2. OPTIONAL: Reset the working tree to a clean state. The build command
# usually does this for you, making this step unnecessary.
#npm run clean -- --force

# 3. Format this package's files.
npm run format

# 4. Lint every file in the package and any files imported by those files.
npm run lint:package

# 5. Build this package's distributables.
npm run build

# 6. Build this package's documentation (AFTER format for correct line numbers).
npm run build:docs

# 7. Run all of this package's tests and the tests of any package imported by
# source files in this package, then generate coverage data.
npm run test:package:all

# 8. Trigger xrelease locally to publish a new release of this package. This
# requires having valid tokens for NPM, GitHub, and Codecov each with the
# appropriate permissions.
#
# Do a dry run first:
npm run release -- --skip-tasks manual --dry-run
# Then review CHANGELOG.md and, after making sure the next release includes the
# commits you're expecting, do the actual release:
npm run release -- --skip-tasks manual
\`\`\`

## Deprecation and End of Life

Sometimes, for a variety of reasons, the maintenance window on a project may
close for good. It happens. And when it does, there is a need to make clear to
all current and future users that the project and its assets (repository,
published packages, etc) are to be considered deprecated and that no further
maintenance is intended.

With somber focus, the following steps should be taken:

> [!TIP]
>
> If you're using [xscripts][12], all of this can be done automatically:
>
> \`\`\`bash
> npx xscripts project renovate --deprecate
> \`\`\`

> These steps were inspired by [Richard Litt's checklist][13].

### Deprecate the Remote (GitHub) repository

> [!IMPORTANT]
>
> If the deprecated project is using [xscripts][12]/[xpipeline][14], at least
> one of the commits created as a result of following these instructions must be
> of the [\`build\` type][15] so that a final "deprecated" version with updated
> deprecation documentation is released. If operating on a monorepo, said commit
> must touch every deprecated package.

<br />

- [ ] **Update Metadata**.

GitHub repositories have metadata settings that can be configured via the [gear
icon][16]. Once the modal is revealed, the following settings should be updated:

- \`‚õîÔ∏è [DEPRECATED]\` should be prepended to the description.

- If the website is pointing to NPM, the input box should be emptied.

- All three checkboxes under "Include in the home page" (i.e. "Releases,"
  "Packages," and "Deployments) should be unchecked.

Be sure to save the changes by pressing "Save changes"!

<br />

- [ ] **Update \`README.md\`**.

The project root \`README.md\` file and any README files at \`packages/*/README.md\`
(if applicable) should be updated as follows:

- The level one heading at the top of the file should be updated to "# ‚õîÔ∏è
  DEPRECATED/UNMAINTAINED" (no quotes).

- All badges except badge-blm should be removed; badge-unmaintained should be
  added.

- Under the updated level one heading, a [caution alert][17] should be included
  that details the reason why this project is being deprecated. Any
  alternatives, forks, see-also's, and/or future projects should be linked here.

What follows is an example outcome of the above steps:

\`\`\`markdown
<!-- badges-start -->

[![Black Lives Matter!][badge-blm]][link-blm]
[![!!UNMAINTAINED!!][badge-unmaintained]][link-unmaintained]

<!-- badges-end -->

# ‚õîÔ∏è DEPRECATED/UNMAINTAINED

> [!CAUTION]
>
> This project has been superseded (and all of its useful bits subsumed) by
> [something-else](https://github.com/something/else).

...

[badge-blm]: https://xunn.at/badge-blm 'Join the movement!'
[link-blm]: https://xunn.at/donate-blm
[badge-unmaintained]:
  https://xunn.at/badge-unmaintained
  'Unfortunately, this project is unmaintained (forks welcome!)'
[link-unmaintained]: https://xunn.at/link-unmaintained
\`\`\`

<br />

- [ ] **Update \`package.json\` (if applicable)**.

If the project has a \`package.json\` file at its root and/or at
\`packages/*/package.json\` (if applicable), they should be updated as follows:

- The [\`description\` string][18] should be prefixed with \`‚õîÔ∏è [DEPRECATED]\`.

- The strings \`"deprecated", "obsolete", "archived"\` should be added to the
  [\`keywords\` array][19] if this file defines a published package.

### Deprecate the Published Packages

- [ ] **Update \`package.json\` (if applicable)**.

[See above][20].

- [ ] **Publish Final Version**.

Any updates to [source repository][20] assets (including \`package.json\` files
and adding deprecation language to \`README.md\` files) should be published as a
single patch release in a polyrepo, or one release per package in a monorepo.

- [ ] **Issue Package-Wide Deprecation Command**.

Use [\`npm deprecate\`][22] to [officially deprecate][23] each package after their
final patch releases are published.

### Deprecate the Local Repository

Consider moving the repository to a place where it is accessible but otherwise
out of the way, e.g. \`/repos/.deprecated/<deprecated-repo-here>\`.

## A Huge Thank You

Thank you so much for helping to maintain this project!

[1]: ./.github/CODE_OF_CONDUCT.md
[2]: http://makeapullrequest.com
[3]: ./.github/workflows
[4]:
  https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#rebase-and-merge-your-commits
[5]:
  https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-commits
[6]: https://github.com/Xunnamius/xchangelog
[7]: https://www.conventionalcommits.org/en/v1.0.0
[8]:
  https://www.metaltoad.com/blog/beginners-guide-git-bisect-process-elimination
[9]: https://dev.to/paulinevos/atomic-commits-will-help-you-git-legit-35i7
[10]: https://github.com/Xunnamius/xrelease
[11]:
  https://github.com/Xunnamius/xscripts/blob/68d5bda031da6af194e5d5f3199eeac7c7416076/src/assets/_release.config.cjs.ts#L147-L157
[12]: https://github.com/Xunnamius/xscripts
[13]:
  https://github.com/RichardLitt/knowledge/blob/master/github/how-to-deprecate-a-repository-on-github.md
[14]: https://github.com/Xunnamius/pipeline
[15]:
  https://github.com/Xunnamius/xscripts/blob/4563bfe4a8d340a8373603d6c8210e79f714e59b/src/assets/transformers/_conventional.config.cjs.ts#L264-L277
[16]: https://github.com/orgs/community/discussions/54372
[17]: https://github.com/orgs/community/discussions/16925
[18]: https://docs.npmjs.com/cli/v10/configuring-npm/package-json#description-1
[19]: https://docs.npmjs.com/cli/v10/configuring-npm/package-json#keywords
[20]: #deprecate-the-remote-github-repository
[21]:
  https://docs.npmjs.com/generating-provenance-statements#provenance-limitations
[22]: https://docs.npmjs.com/cli/v8/commands/npm-deprecate
[23]:
  https://docs.npmjs.com/deprecating-and-undeprecating-packages-or-package-versions
[24]: #manual-release-method-1-semi-automated
[25]:
  https://github.com/conventional-changelog-archived-repos/conventional-changelog-angular/blob/ed32559941719a130bb0327f886d6a32a8cbc2ba/convention.md
[26]: https://github.com/semantic-release/commit-analyzer
"
`;

exports[`::gatherAssetsFromTransformer <config assets> next.js: /dummy/next.config.mjs 1`] = `
"key: /dummy/next.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/next.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:next' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> npm-check-updates: /dummy/.ncurc.cjs 1`] = `
"key: /dummy/.ncurc.cjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

// TODO: publish latest rejoinder package first, then update configs to use it
//const { createDebugLogger } = require('rejoinder');

/*const debug = createDebugLogger({ namespace: 'xscripts:config:ncurc' });*/

// * https://www.npmjs.com/package/npm-check-updates#configuration-files
module.exports = {
  install: 'never',
  reject: [
    // ? Reject any super-pinned dependencies (e.g. find-up~5 and execa~7)
    '*~*'
  ]
};

/*debug('exported config: %O', module.exports);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> package.json: /dummy/package.json 1`] = `
"key: /dummy/package.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  "name": "package-name",
  "version": "1.2.3-fake",
  "description": "package-description",
  "keywords": [],
  "homepage": "repo-url#readme",
  "bugs": {
    "url": "repo-url/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+repo-url.git"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "default": "./dist/src/index.js"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "typesVersions": {
    "*": {
      "index": [
        "dist/src/index.d.ts"
      ],
      "package": [
        "package.json"
      ]
    }
  },
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run build:dist --",
    "build:changelog": "NODE_NO_WARNINGS=1 xscripts build changelog",
    "build:dist": "NODE_NO_WARNINGS=1 xscripts build distributables",
    "build:docs": "NODE_NO_WARNINGS=1 xscripts build docs",
    "clean": "NODE_NO_WARNINGS=1 xscripts clean",
    "format": "NODE_NO_WARNINGS=1 xscripts format --hush",
    "info": "NODE_NO_WARNINGS=1 xscripts project info",
    "lint": "npm run lint:package --",
    "lint:package": "NODE_NO_WARNINGS=1 xscripts lint",
    "lint:packages": "NODE_NO_WARNINGS=1 xscripts lint --scope unlimited",
    "lint:project": "NODE_NO_WARNINGS=1 xscripts project lint",
    "list-tasks": "NODE_NO_WARNINGS=1 xscripts list-tasks",
    "prepare": "NODE_NO_WARNINGS=1 xscripts project prepare",
    "release": "NODE_NO_WARNINGS=1 xscripts release",
    "renovate": "NODE_NO_WARNINGS=1 xscripts project renovate --sync-deps --github-reconfigure-repo --regenerate-assets --assets-preset basic",
    "start": "NODE_NO_WARNINGS=1 xscripts start --",
    "test": "npm run test:package:unit --",
    "test:package:all": "NODE_NO_WARNINGS=1 xscripts test --coverage",
    "test:package:e2e": "NODE_NO_WARNINGS=1 xscripts test --tests end-to-end",
    "test:package:integration": "NODE_NO_WARNINGS=1 xscripts test --tests integration",
    "test:package:unit": "NODE_NO_WARNINGS=1 xscripts test --tests unit",
    "test:packages:all": "NODE_NO_WARNINGS=1 xscripts test --scope unlimited --coverage"
  },
  "engines": {
    "node": "^18.20.0 || ^20.15.0 || >=22.5.0"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org"
  },
  "dependencies": {}
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> postcss: /dummy/postcss.config.mjs 1`] = `
"key: /dummy/postcss.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/postcss.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:postcss' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> prettier: /dummy/prettier.config.mjs 1`] = `
"key: /dummy/prettier.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/prettier.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:prettier' });*/

const config = deepMergeConfig(
  moduleExport(),
  /**
   * @type {import('@-xun/scripts/assets/prettier.config.mjs').PrettierConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport's result
  }
);

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> prettier-ignore: /dummy/.prettierignore 1`] = `
"key: /dummy/.prettierignore
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# * Paths below are ignored by prettier as well as remark and doctoc when called
# * with \`xscripts format\`.

# ! Note that any pattern with a / in the beginning OR MIDDLE (but not end) will
# ! be consider relative to the this file ONLY. Matching subdirs will NOT match!
# ! Otherwise, patterns will match entities in any directory or subdirectory.
# ! Prepend ** (or **/) if advanced subdir matching of complex paths is desired.
# ! See https://git-scm.com/docs/gitignore#_pattern_format

# Ignore temporary files in any subdir by giving them a special name
*.ignore
*.ignore.*
ignore.*

# Ignore sensitive files in any subdir
.env
.npmrc
*.local

# Ignore transpiled source in any subdir (used for advanced debugging)
.transpiled

# Ignore relevant build artifacts in any subdir (with exceptions)
*.tsbuildinfo
# ? Preceding AND proceeding asterisks (**) are needed to match any build subdir
# ? in monorepos and allow subsequent negations to be interpreted properly.
**/build/**
# ? This negation must end in "/**" to be interpreted properly.
!**/src/**/build/**
docs
dist
coverage
.vercel
.next
next-env.d.ts
CHANGELOG.md
LICENSE
LICENSE.md

# Ignore relevant NPM artifacts in any subdir
node_modules
package-lock.json

# Ignore test fixtures in any subdir (which may depend on remaining as they are)
fixtures

# Ignore things that prettier isn't good at in any subdir
*.hbs

# Ignore random nothingness in any subdir
.DS_Store
"
`;

exports[`::gatherAssetsFromTransformer <config assets> readme (markdown): /dummy/README.md 1`] = `
"key: /dummy/README.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
<!-- xscripts-renovate-region-start -->

<p align="center" width="100%">
  <img width="300" src="./repo-name.png">
</p>

<p align="center" width="100%">
<!-- xscripts-renovate-region-end -->
package-description
<!-- xscripts-renovate-region-start -->
</p>

<hr />

badges

<br />

# title-name

<!-- xscripts-renovate-region-end -->

package-description

<!-- xscripts-renovate-region-start -->

<br />

---

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Install](#install)
- [Usage](#usage)
- [Appendix](#appendix)
  - [Published Package Details](#published-package-details)
  - [License](#license)
- [Contributing and Support](#contributing-and-support)
  - [Contributors](#contributors)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

<br />

## Install

<!-- xscripts-renovate-region-end -->

To install repo-name:

\`\`\`shell
npm install package-name
\`\`\`

If you want to use a specific version of repo-name, provide its semver:

\`\`\`shell
npm install package-name@1.2.3
\`\`\`

## Usage

<!-- TODO -->

TODO

<!-- xscripts-renovate-region-start -->

## Appendix

Further documentation can be found under [\`docs/\`](repo-reference-docs).

### Published Package Details

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-short-1

---‚úÑ---

package-build-details-short-2

---‚úÑ---

package-build-details-short-3

---‚úÑ---

package-build-details-short-4

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

<details><summary>Expand details</summary>

<!-- TODO: Choose one of the following and ‚úÑ delete ‚úÑ the others: -->

package-build-details-long-1

<!-- xscripts-renovate-region-end -->
<!-- TODO: custom details here -->
<!-- xscripts-renovate-region-start -->

</details>

### License

See [LICENSE](repo-reference-license).

## Contributing and Support

**[New issues](repo-reference-new-issue) and
[pull requests](repo-reference-pr-compare) are always welcome and greatly
appreciated! ü§©** Just as well, you can
[star üåü this project](repo-reference-self) to let me know you found it useful!
‚úäüèø Or you could consider [buying me a beer](repo-reference-sponsor). Thank you!

See [CONTRIBUTING.md](repo-reference-contributing) and
[SUPPORT.md](repo-reference-support) for more information.

### Contributors

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->

[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)

<!-- ALL-CONTRIBUTORS-BADGE:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

Thanks goes to these wonderful people
([emoji key](repo-reference-all-contributors-emojis)):

<!-- remark-ignore-start -->
<!-- xscripts-renovate-region-end -->
<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<table></table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->
<!-- xscripts-renovate-region-start -->
<!-- remark-ignore-end -->

This project follows the [all-contributors](repo-reference-all-contributors)
specification. Contributions of any kind welcome!

<!-- xscripts-renovate-region-end -->
<!-- xscripts-renovate-region-definitions -->

repo-reference-definitions-badge

repo-reference-definitions-package

repo-reference-definitions-repo
"
`;

exports[`::gatherAssetsFromTransformer <config assets> remark: /dummy/.remarkrc.mjs 1`] = `
"key: /dummy/.remarkrc.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check

import { deepMergeConfig } from '@-xun/scripts/assets';

import {
  moduleExport,
  assertEnvironment
} from '@-xun/scripts/assets/.remarkrc.mjs';

// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:remarkrc' });*/

const config = deepMergeConfig(
  moduleExport(await assertEnvironment()),
  /**
   * @type {import('@-xun/scripts/assets/.remarkrc.mjs').RemarkConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport
  }
);

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> security (markdown): /dummy/SECURITY.md 1`] = `
"key: /dummy/SECURITY.md
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
# Security ‚ò†Ô∏è [![Known Vulnerabilities][2]][1]

If the issue is related to a public alert from OWASP/GitHub/Dependabot/CVE/etc
and [does not already have an open issue][3], feel free to [open a new
issue][4]. Otherwise, please report any security vulnerability or other
security-related incident or sensitive subject to us [via private vulnerability
disclosure through GitHub][5] or, if that fails, [via email][6].

Thank you for your contribution!

[1]: repo-snyk-url
[2]: repo-snyk-url/badge.svg
[3]: repo-url/issues?q=
[4]: repo-url/issues/new/choose
[5]:
  https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability#privately-reporting-a-security-vulnerability
[6]:
  mailto:security@ergodark.com?subject=ALERT%3A%20SECURITY%20INCIDENT%3A%20%28five%20word%20summary%29
"
`;

exports[`::gatherAssetsFromTransformer <config assets> src (directory): /dummy/src/index.ts 1`] = `
"key: /dummy/src/index.ts
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
export {};
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tailwind: /dummy/tailwind.config.mjs 1`] = `
"key: /dummy/tailwind.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/tailwind.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:tailwind' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> test (directory): /dummy/test/index.ts 1`] = `
"key: /dummy/test/index.ts
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
 ** This file exports test utilities specific to this project and beyond what is
 ** exported by @-xun/test; these can be imported using \`testverse\` aliases.
 */

export {};
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tsconfig (all variants): /dummy/tsc.package.docs.json 1`] = `
"key: /dummy/tsc.package.docs.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
 ** This file extends the project root tsconfig.json file for use with
 ** typedoc at the package level.
 **
 ** Use this file to exert some control over how typedoc generates
 ** package-specific documentation.
 */

{
  "$schema": "https://json.schemastore.org/tsconfig.json",
  "extends": "./tsconfig.json",
  "include": ["types/**/*", "src/**/*", "test/**/*"],
  "exclude": [
    "**/dist/**/*",
    "**/test/fixtures/**/*",
    "**/node_modules/**/*",
    "packages/**/*",
    "packages/**/.*",
    "**/*.ignore",
    "**/*.ignore.*/**/*",
    "**/ignore.*"
  ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tsconfig (all variants): /dummy/tsc.package.lint.json 1`] = `
"key: /dummy/tsc.package.lint.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
 ** This file extends the project root tsconfig.json file for use with linting
 ** all files at the package level. Only tsc gets its paths from this file.
 **
 ** Use this file to exert some control over which files are considered
 ** part of the current package and which will be ignored.
 */

{
  "$schema": "https://json.schemastore.org/tsconfig.json",
  "extends": "./tsconfig.json",
  "include": ["**/*", "**/.*/**/*", "**/.*"],
  "exclude": [
    "**/dist/**/*",
    "**/test/fixtures/**/*",
    "**/node_modules/**/*",
    "packages/**/*",
    "packages/**/.*",
    "**/*.ignore",
    "**/*.ignore.*/**/*",
    "**/ignore.*"
  ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tsconfig (all variants): /dummy/tsc.package.types.json 1`] = `
"key: /dummy/tsc.package.types.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
** This file extends the project root tsconfig.json file for use with tsc at
** the package level.
**
** Use this file to exert some control over how tsc generates package-specific
** definition files.
*/

{
"$schema": "https://json.schemastore.org/tsconfig.json",
"extends": "./tsconfig.json",
"compilerOptions": {
"allowJs": false,
"checkJs": false,
"declaration": true,
"emitDeclarationOnly": true,
"isolatedModules": false,
"noEmit": false,
"outDir": "dist",
"rootDir": "./"
},
"include": ["types/**/*", "src/**/*"],
"exclude": [
"**/dist/**/*",
"**/test/fixtures/**/*",
"**/node_modules/**/*",
"packages/**/*",
"packages/**/.*",
"**/*.ignore",
"**/*.ignore.*/**/*",
"**/ignore.*"
]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tsconfig (all variants): /dummy/tsc.project.lint.json 1`] = `
"key: /dummy/tsc.project.lint.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
/**
 ** This file extends the project root tsconfig.json file for use with linting
 ** all files at the project level.
 **
 ** Use this file to exert some control over which files will have their errors
 ** reported and which files will be ignored when linting an entire project
 ** repository at once.
 */

 {
 "$schema": "https://json.schemastore.org/tsconfig.json",
 "extends": "./tsconfig.json",
 "include": ["**/*", "**/.*/**/*", "**/.*"],
 "exclude": [
 "**/dist/**/*",
 "**/test/fixtures/**/*",
 "**/node_modules/**/*",
 "**/*.ignore",
 "**/*.ignore.*/**/*",
 "**/ignore.*"
 ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tsconfig (all variants): /dummy/tsconfig.json 1`] = `
"key: /dummy/tsconfig.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  "compilerOptions": {
    // ? Needed to type check our various .js files
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    // ? Due to paths, the effect of this prop is limited (already covered)
    "allowImportingTsExtensions": true,
    // ? Due to paths, the effect of this prop is limited (often ignored)
    "allowArbitraryExtensions": true,
    "alwaysStrict": true,
    "baseUrl": ".",
    // ? Does too much; opt-in (provided by allowJs) is better
    "checkJs": false,
    "jsx": "preserve",
    "declaration": false,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "incremental": true,
    "inlineSourceMap": true,
    "isolatedModules": true,
    // ? Tried it. Not a fan. Also conflicts with allowJs
    "isolatedDeclarations": false,
    "lib": [
      "ESNext",
      "DOM",
      "WebWorker.ImportScripts",
      "ScriptHost",
      "DOM.Iterable"
    ],
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "noEmit": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
        // ! The aliases described in "paths" are auto-generated by xscripts.
    // ! Instead of modifying it directly, consider regenerating aliases
    // ! across the entire project with: \`npx xscripts project renovate
    // ! --regenerate-aliases\`
    // * These aliases appear in:
    // *   - tsconfig.json      (JSON)
    // *   - babel.config.cjs   (CJS)
    // *   - eslint.config.mjs  (ESM)
    // *   - jest.config.mjs    (ESM)
    // *   - next.config.mjs    (ESM)
    // *   - webpack.config.mjs (ESM)
    "paths": {
      "universe:*": ["src/*"],
      "universe": ["src/index.ts"],
      "multiverse+webpack:*": ["packages/webpack/src/*"],
      "multiverse+unnamed-esm:*": ["packages/unnamed-esm/src/*"],
      "multiverse+unnamed-cjs:*": ["packages/unnamed-cjs/src/*"],
      "multiverse+private:*": ["packages/private/src/*"],
      "multiverse+cli:*": ["packages/cli/src/*"],
      "multiverse+webpack": ["packages/webpack/src/index.ts"],
      "multiverse+unnamed-esm": ["packages/unnamed-esm/src/index.ts"],
      "multiverse+unnamed-cjs": ["packages/unnamed-cjs/src/index.ts"],
      "multiverse+private": ["packages/private/src/index.ts"],
      "multiverse+cli": ["packages/cli/src/index.ts"],
      "rootverse+webpack:*": ["packages/webpack/*"],
      "rootverse+unnamed-esm:*": ["packages/unnamed-esm/*"],
      "rootverse+unnamed-cjs:*": ["packages/unnamed-cjs/*"],
      "rootverse+private:*": ["packages/private/*"],
      "rootverse+cli:*": ["packages/cli/*"],
      "rootverse:*": ["*"],
      "testverse+webpack:*": ["packages/webpack/test/*"],
      "testverse+unnamed-esm:*": ["packages/unnamed-esm/test/*"],
      "testverse+unnamed-cjs:*": ["packages/unnamed-cjs/test/*"],
      "testverse+private:*": ["packages/private/test/*"],
      "testverse+cli:*": ["packages/cli/test/*"],
      "testverse:*": ["test/*"],
      "typeverse:*": ["types/*"]
    },
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "strict": true,
    "target": "ESNext"
  },
  "include": [
    "types/**/*",
    "src/**/*",
    "test/**/*",
    "packages/*/src/**/*",
    "packages/*/test/**/*"
  ],
  "exclude": [
    "**/dist/**/*",
    "**/node_modules/**/*",
    "**/*.ignore",
    "**/*.ignore.*/**/*",
    "**/ignore.*"
  ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> tstyche.config.json: /dummy/tstyche.config.json 1`] = `
"key: /dummy/tstyche.config.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{"$schema":"https://tstyche.org/schemas/config.json","testFileMatch":["**/type-*.test.ts","**/type-*.test.tsx"]}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> turbo.json: /dummy/turbo.json 1`] = `
"key: /dummy/turbo.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> types (directory): /dummy/types/example 1`] = `
"key: /dummy/types/example
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
declare module 'glob-gitignore' {
  import type { GlobOptions } from 'glob';

  export type GlobGitignoreOptions = Omit<GlobOptions, 'ignore'> & {
    /**
     * A string or array of strings used to determine which globbed paths are
     * ignored. Typically this is the result of parsing a .gitignore file (or file
     * with compatible format) split by \`"
"\`.
     */
    ignore?: string | string[];
  };

  export async function glob(
    patterns: string | string[],
    options: GlobGitignoreOptions
  ): Promise<string[]>;

  export function sync(
    patterns: string | string[],
    options: GlobGitignoreOptions
  ): string[];

  export function hasMagic(patterns: string | string[], options?: GlobOptions): string;
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> types (directory): /dummy/types/global.ts 1`] = `
"key: /dummy/types/global.ts
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
export type {};
"
`;

exports[`::gatherAssetsFromTransformer <config assets> vscode (directory): /dummy/.vscode/launch.example.json 1`] = `
"key: /dummy/.vscode/launch.example.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  "configurations": [
    {
      "type": "node",
      "name": "vscode-jest-tests.v2",
      "request": "launch",
      "program": "\${workspaceFolder}/node_modules/.bin/jest",
      "args": [
        "--runInBand",
        "--watchAll=false",
        "--testNamePattern",
        "\${jest.testNamePattern}",
        "--runTestsByPath",
        "\${jest.testFile}"
      ],
      "cwd": "\${workspaceFolder}",
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "env": {
        "NODE_ENV": "test",
        "NODE_OPTIONS": "--no-warnings --experimental-vm-modules",
        "DEBUG_COLORS": "false"
      },
      "windows": {
        "program": "\${workspaceFolder}/node_modules/jest/bin/jest"
      },

      // ! Note that these settings do NOT affect MANUALLY LAUNCHED debug
      // ! terminals! To affect stepping while using the debug terminal
      // ! manually, you'll need to configure settings.json (non-workspace) or
      // ! *.code-workspace (workspace) and set
      // ! \`debug.javascript.terminalOptions.skipFiles/smartStep\` appropriately.
      // * You MAY need to reload vscode/vscode-jest before changes take effect!
      // ? Set to false to step through node internals
      "smartStep": true,
      // ? Selectively comment out entries for deeper debugging
      "skipFiles": [
        "<node_internals>/**",
        "**/node_modules/**"
        //"!**/node_modules/@-xun/**"
      ]
    },
    {
      "type": "node",
      "name": "jest-active-file",
      "request": "launch",
      "program": "\${workspaceFolder}/node_modules/.bin/jest",
      "args": ["--runInBand", "--watchAll=false", "\${file}"],
      "cwd": "\${workspaceFolder}",
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "env": {
        "NODE_ENV": "test",
        "NODE_OPTIONS": "--no-warnings --experimental-vm-modules",
        "DEBUG_COLORS": "false"
      },
      "windows": {
        "program": "\${workspaceFolder}/node_modules/jest/bin/jest"
      },

      // ! Note that these settings do NOT affect MANUALLY LAUNCHED debug
      // ! terminals! To affect stepping while using the debug terminal
      // ! manually, you'll need to configure settings.json (non-workspace) or
      // ! *.code-workspace (workspace) and set
      // ! \`debug.javascript.terminalOptions.skipFiles/smartStep\` appropriately.
      // * You MAY need to reload vscode/vscode-jest before changes take effect!
      // ? Set to false to step through node internals
      "smartStep": true,
      // ? Selectively comment out entries for deeper debugging
      "skipFiles": [
        "<node_internals>/**",
        "**/node_modules/**"
        //"!**/node_modules/@-xun/**"
      ]
    },
    {
      "type": "node",
      "name": "jest-transpiled",
      "request": "launch",
      "program": "\${workspaceFolder}/node_modules/.bin/jest",
      "args": ["--runInBand", "--watchAll=false", "\${file}"],
      "cwd": "\${workspaceFolder}",
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "sourceMaps": false,
      "env": {
        "NODE_ENV": "test",
        "NODE_OPTIONS": "--no-warnings --experimental-vm-modules",
        "DEBUG_COLORS": "false",
        "XSCRIPTS_TEST_JEST_TRANSPILED": "true"
      },
      "windows": {
        "program": "\${workspaceFolder}/node_modules/jest/bin/jest"
      },

      // ! Note that these settings do NOT affect MANUALLY LAUNCHED debug
      // ! terminals! To affect stepping while using the debug terminal
      // ! manually, you'll need to configure settings.json (non-workspace) or
      // ! *.code-workspace (workspace) and set
      // ! \`debug.javascript.terminalOptions.skipFiles/smartStep\` appropriately.
      // * You MAY need to reload vscode/vscode-jest before changes take effect!
      // ? Set to false to step through node internals
      "smartStep": true,
      // ? Selectively comment out entries for deeper debugging
      "skipFiles": [
        "<node_internals>/**",
        "**/node_modules/**"
        //"!**/node_modules/@-xun/**"
      ]
    }
  ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> vscode (directory): /dummy/.vscode/settings.json 1`] = `
"key: /dummy/.vscode/settings.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  // ! Note that some of these configurations are ignored when the project is
  // ! opened as part of a vscode workspace (especially multi-root). In such a
  // ! case, look to the workspace's configuration file for tweakable settings.

  "debug.javascript.terminalOptions": {
    //"skipFiles": ["<node_internals>/**", "**/node_modules/**"]
    "skipFiles": []
  },
  "cSpell.words": [],
  // ? Use the version of TypeScript that is installed alongside the project
  "typescript.tsdk": "node_modules/typescript/lib"
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> vscode (directory): /dummy/.vscode/tasks.example.json 1`] = `
"key: /dummy/.vscode/tasks.example.json
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "lint: discover problems",
      "type": "process",
      "command": "npx",
      "args": [
        "xscripts",
        "lint",
        "--scope=unlimited",
        "--linter=eslint",
        "--linter=tsc",
        "--allow-warning-comments=false"
      ],
      "presentation": {
        "echo": true,
        "reveal": "never"
      },
      "echoCommand": true,
      "icon": { "id": "zap", "color": "terminal.ansiCyan" },
      "problemMatcher": ["$eslint-stylish", "$tsc"]
    }
  ]
}
"
`;

exports[`::gatherAssetsFromTransformer <config assets> webpack: /dummy/webpack.config.mjs 1`] = `
"key: /dummy/webpack.config.mjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/scripts/assets';
import { moduleExport } from '@-xun/scripts/assets/webpack.config.mjs';
// TODO: publish latest rejoinder package first, then update configs to use it
//import { createDebugLogger } from 'rejoinder';

/*const debug = createDebugLogger({ namespace: 'xscripts:config:webpack' });*/

const config = deepMergeConfig(moduleExport(), {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

/*debug('exported config: %O', config);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> xchangelog: /dummy/conventional.config.cjs 1`] = `
"key: /dummy/conventional.config.cjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

const {
  moduleExport,
  assertEnvironment
} = require('@-xun/scripts/assets/conventional.config.cjs');

// TODO: publish latest rejoinder package first, then update configs to use it
//const { createDebugLogger } = require('rejoinder');

/*const debug = createDebugLogger({ namespace: 'xscripts:config:conventional' });*/

module.exports = moduleExport({
  ...assertEnvironment(),
  configOverrides: {
    // Any custom configs here will be deep merged with moduleExport with
    // special considerations for certain keys. \`configOverrides\` can also
    // be a function instead of an object.
  }
});

/*debug('exported config: %O', module.exports);*/
"
`;

exports[`::gatherAssetsFromTransformer <config assets> xrelease: /dummy/release.config.cjs 1`] = `
"key: /dummy/release.config.cjs
scope: unlimited
preset: undefined
‚è∂‚è∑‚è∂‚è∑‚è∂
// @ts-check
'use strict';

const { deepMergeConfig } = require('@-xun/scripts/assets');
const { moduleExport } = require('@-xun/scripts/assets/release.config.cjs');
// TODO: publish latest rejoinder package first, then update configs to use it
//const { createDebugLogger } = require('rejoinder');

/*const debug = createDebugLogger({ namespace: 'xscripts:config:release' });*/

module.exports = deepMergeConfig(
  moduleExport(assertEnvironment({ projectRoot: __dirname })),
  /**
   * @type {import('@-xun/scripts/assets/release.config.cjs').ReleaseConfig}
   */
  {
    // Any custom configs here will be deep merged with moduleExport's result
  }
);

/*debug('exported config: %O', module.exports);*/
"
`;
