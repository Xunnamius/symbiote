// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`::compileTemplate accepts a template file path and returns a compilation result string: SECURITY.md 1`] = `
"# Security ‚ò†Ô∏è [![Known Vulnerabilities][2]][1]

If the issue is related to a public alert from OWASP/GitHub/Dependabot/CVE/etc
and [does not already have an open issue][3], feel free to [open a new
issue][4]. Otherwise, please report any security vulnerability or other
security-related incident or sensitive subject to us [via private vulnerability
disclosure through GitHub][5] or, if that fails, [via email][6].

Thank you for your contribution!

[1]: https://snyk.io/test/github/repo-owner/repo-name
[2]: https://snyk.io/test/github/repo-owner/repo-name/badge.svg
[3]: https://github.com/repo-owner/repo-name/issues?q=
[4]: https://github.com/repo-owner/repo-name/issues/new/choose
[5]:
  https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability#privately-reporting-a-security-vulnerability
[6]:
  mailto:security@ergodark.com?subject=ALERT%3A%20SECURITY%20INCIDENT%3A%20%28five%20word%20summary%29
"
`;

exports[`::compileTemplates accepts an object of template file path values and returns the same object with corresponding compilation result string values 1`] = `
{
  ".github/SUPPORT.md": "# Support [![Average issue resolution time][badge-issue-resolution]][link-issue-resolution] [![Issue open percentage][badge-issue-percentage]][open-issues]

Need help? Want to help this project? See below!

## Reporting an Issue

Before you begin, please [search open and past issues][open-issues] to see if
your issue or feature request is already being talked about.

If you find your issue already exists, make sure to [bump the issue by adding a
reaction][github-blog]. **If you're serious about wanting an issue to get
attention, use a reaction in place of a "+1" or other similar comment.**

If you cannot find an existing issue that describes your bug or feature, then
you're clear to create your issue using the guidelines below.

### Standard Reactions

Analysis of issue popularity (by tooling or otherwise) relies on the following
reaction emojis being present on issues, PRs, and replies:

\`:+1:\` üëçüèøüëçüèæüëçüèΩüëçüèºüëçüèªüëç ‚Äî up vote (AKA: _approve_, _like_, _+1_)

\`:-1:\` üëéüèøüëéüèæüëéüèΩüëéüèºüëéüèªüëé ‚Äî down vote (AKA: _disapprove_, _dislike_, _-1_)

### Bug Reports and Feature Requests

For the timeliest resolution to bug reports specifically, please make a good
faith effort to [follow the template][choose-new-issue]. The more quality
information you can provide, the quicker a fix will be found. Additionally:

- Ensure you file one issue per problem or feature request.
- Do not enumerate multiple bugs or feature requests in the same issue.
- Do not add your issue as a comment to an existing issue unless you're
  experiencing identical behavior or behavior that stems from the exact same
  problem.

That's it! You are now ready to [submit a new issue][choose-new-issue]! Thank
you for contribution üéâ, your efforts are greatly appreciated! üôåüèø

#### Closure Policy

- Issues that do not follow the appropriate template or contain necessary
  information may be closed immediately and the poster directed to these
  guidelines.
- Issues that go for an extended period without activity are subject to closure.

[badge-issue-percentage]:
  https://isitmaintained.com/badge/open/repo-owner/repo-name.svg
  'Open issues as a percentage of all issues'
[badge-issue-resolution]:
  https://isitmaintained.com/badge/resolution/repo-owner/repo-name.svg
  'Average time to resolve an issue'
[choose-new-issue]:
  https://github.com/repo-owner/repo-name/issues/new/choose
[github-blog]:
  https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments
[link-issue-resolution]:
  https://isitmaintained.com/project/repo-owner/repo-name
[open-issues]: https://github.com/repo-owner/repo-name/issues?q=
",
  "CONTRIBUTING.md": "# Contributing

Hi there! First off, we're thrilled ü§© you want contribute to this project!

First time contributor to a GitHub project? If you could use some help getting
started, [take a look at this quick and easy guide][how-to-contribute]. üíú

## Briefly: Submitting a Pull Request (Pr)

> See also: [CODE_OF_CONDUCT.md][code-of-conduct]

This repository uses a [fully automated][github-actions] [continuous
linting][husky-cl] (CL), integration testing (CI), and deployment (CD)
[symbiote][symbiote]-based pipeline for integrating PRs and publishing releases.
The neat thing about a fully automated pipeline is that anyone anywhere can make
a contribution quickly and with minimal tedium.

This repository makes extensive use of [debug][pkg-debug]. Should you wish to
view all possible debugging output, [export
\`DEBUG='*,*:*'\`][pkg-debug-wildcards].

The ideal contributor flow is as follows:

1. [Fork][fork] this repository and [clone it locally][how-to-clone].
   - If there is a custom Docker image available for this project and you're
     comfortable with Docker, consider using it instead.
2. Configure and install dependencies with \`npm ci\`.
   - You use \`npm ci\` here instead of \`npm install\` to [prevent unnecessary
     updates to \`package.json\` and \`package-lock.json\`][npm-ci], but if it makes
     more sense to use \`npm install\` feel free to use that instead.
     - **If you're getting an EINTEGRITY error from npm, you need to delete
       package-lock.json before running \`npm install\` (not \`npm ci\`).**
   - If \`.env.default\` exists, consider copying it to \`.env\` for sensible
     pre-configured defaults.
3. Before making any changes, ensure all unit tests are passing with
   \`npm run test\`.
4. _(optional but recommended)_ Create a new branch, usually off \`main\`.
   - Example: \`git checkout -b contrib-feature-1\`.
5. Make your changes and commit. Your work will be checked as you commit; any
   problems will abort the commit/push attempt.
   - Ensure any new tests still pass even when the \`DEBUG\` environment variable
     is defined.
6. Push your commits to your fork and, when you're ready, [_fearlessly_ submit
   your PR][pr-compare]! Your changes will be tested in our CI pipeline.
7. Pat yourself on the back! Your hard work is well on its way to being reviewed
   and, if everything looks good, merged and released üöÄ

Additionally, there are a few things you can do to greatly increase the
likelihood your PR passes review:

- **Do** [open an issue][choose-new-issue] and discuss your proposed changes (to
  prevent wasting your valuable time, e.g. _maybe we're already working on a
  fix!_), and [search][open-issues] to see if there are any existing issues
  related to your concerns.
- **Do** practice [atomic committing][atomic-commits].
- **Do not** reduce code coverage ([codecov][codecov] checks are performed
  during CI).
- **Do** [follow convention][conventional-commits] when coming up with your
  commit messages.
- **Do not** circumvent CL, i.e. automated pre-commit linting, formatting, and
  unit testing.
- **Do** ensure \`README.md\` and other documentation that isn't autogenerated is
  kept consistent with your changes.
- **Do not** create a PR to introduce [_purely_ cosmetic
  commits][cosmetic-commits].
  - Code de-duplication and other potential optimizations we **do not** consider
    _purely_ cosmetic üôÇ
- **Do** keep your PR as narrow and focused as possible.
  - If you ran \`npm install\` instead of \`npm ci\` and it updated \`package.json\`
    or \`package-lock.json\` and those updates have nothing to do with your PR
    (e.g. random nested deps were updated), **do not** stage changes to those
    files.
  - If there are multiple related changes to be made but (1) they do not
    immediately depend on one another or (2) one implements extended/alternative
    functionality based on the other, consider submitting them as separate PRs
    instead.

At this point, you're ready to create your PR and ‚ú® contribute ‚ú®!

[atomic-commits]: https://www.codewithjason.com/atomic-commits-testing
[choose-new-issue]:
  https://github.com/repo-owner/repo-name/issues/new/choose
[code-of-conduct]:
  https://github.com/repo-owner/repo-name/.github/CODE_OF_CONDUCT.md
[codecov]: https://about.codecov.io
[conventional-commits]: https://www.conventionalcommits.org/en/v1.0.0#summary
[cosmetic-commits]:
  https://github.com/rails/rails/pull/13771#issuecomment-32746700
[fork]: https://github.com/repo-owner/repo-name/fork
[github-actions]: https://github.com/features/actions
[how-to-clone]:
  https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository
[how-to-contribute]: https://www.dataschool.io/how-to-contribute-on-github
[husky-cl]: https://github.com/repo-owner/repo-name/tree/main/.husky
[npm-ci]: https://docs.npmjs.com/cli/v6/commands/npm-ci
[open-issues]: https://github.com/repo-owner/repo-name/issues?q=
[pkg-debug]: https://www.npmjs.com/package/debug
[pkg-debug-wildcards]: https://www.npmjs.com/package/debug#wildcards
[pr-compare]: https://github.com/repo-owner/repo-name/compare
[symbiote]: https://github.com/Xunnamius/symbiote#readme
",
  "SECURITY.md": "# Security ‚ò†Ô∏è [![Known Vulnerabilities][2]][1]

If the issue is related to a public alert from OWASP/GitHub/Dependabot/CVE/etc
and [does not already have an open issue][3], feel free to [open a new
issue][4]. Otherwise, please report any security vulnerability or other
security-related incident or sensitive subject to us [via private vulnerability
disclosure through GitHub][5] or, if that fails, [via email][6].

Thank you for your contribution!

[1]: https://snyk.io/test/github/repo-owner/repo-name
[2]: https://snyk.io/test/github/repo-owner/repo-name/badge.svg
[3]: https://github.com/repo-owner/repo-name/issues?q=
[4]: https://github.com/repo-owner/repo-name/issues/new/choose
[5]:
  https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability#privately-reporting-a-security-vulnerability
[6]:
  mailto:security@ergodark.com?subject=ALERT%3A%20SECURITY%20INCIDENT%3A%20%28five%20word%20summary%29
",
  "package/README.md": "<!-- symbiote-template-region-start 1 -->

<p align="center" width="100%">
  <img width="300" src="https://raw.githubusercontent.com/repo-owner/repo-name/refs/heads/main/logo.png">
</p>

<p align="center" width="100%">
<!-- symbiote-template-region-end -->
good-hybridrepo-description
<!-- symbiote-template-region-start 2 -->
</p>

<hr />

<div align="center">

[![Black Lives Matter!][x-badge-blm-image]][x-badge-blm-link]
[![Last commit timestamp][x-badge-lastcommit-image]][x-badge-repo-link]
[![Codecov][x-badge-codecov-image]][x-badge-codecov-link]
[![Source license][x-badge-license-image]][x-badge-license-link]
[![Uses Semantic Release!][x-badge-semanticrelease-image]][x-badge-semanticrelease-link]

[![NPM version][x-badge-npm-image]][x-badge-npm-link]
[![Monthly Downloads][x-badge-downloads-image]][x-badge-downloads-link]

</div>

<br />

# <!-- TODO: --> Project Title Here

<!-- symbiote-template-region-end -->

good-hybridrepo-description.

<!-- symbiote-template-region-start 3 -->

---

<!-- remark-ignore-start -->
<!-- symbiote-template-region-end -->
<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Install](#install)
- [Usage](#usage)
- [Appendix](#appendix)
  - [Published Package Details](#published-package-details)
  - [License](#license)
- [Contributing and Support](#contributing-and-support)
  - [Contributors](#contributors)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->
<!-- symbiote-template-region-start 4 -->
<!-- remark-ignore-end -->

<br />

## Install

<!-- symbiote-template-region-end -->

To install:

\`\`\`shell
npm install good-hybridrepo
\`\`\`

## Usage

<!-- TODO -->

TODO

<!-- symbiote-template-region-start 5 -->

## Appendix

<!-- symbiote-template-region-end -->

Further documentation can be found under [\`docs/\`][x-repo-docs].

<!-- TODO: additional appendix sections here -->
<!-- symbiote-template-region-start 6 -->

### Published Package Details

<!-- TODO: choose one of the following and --‚úÑ--delete--‚úÑ-- the others: -->

This is a [CJS2 package][x-pkg-cjs-mojito] with statically-analyzable exports
built by Babel for use in Node.js versions that are not end-of-life. For
TypeScript users, this package supports both \`"Node10"\` and \`"Node16"\` module
resolution strategies.

‚úÑ------------‚úÑ-----------‚è∂-‚è∑-----------‚úÑ------------‚úÑ

This is an [ESM-only package][x-pkg-esm-wine] built by Babel for use in Node.js
versions that are not end-of-life. For TypeScript users, this package supports
both \`"Node10"\` and \`"Node16"\` module resolution strategies.

‚úÑ------------‚úÑ-----------‚è∂-‚è∑-----------‚úÑ------------‚úÑ

This is an [ESM-only package][x-pkg-esm-wine] built by Babel for use in
browser-like environments. For TypeScript users, this package supports both
\`"Node10"\` and \`"Node16"\` module resolution strategies.

<!-- TODO: choose one of the above and --‚úÑ--delete--‚úÑ-- the others! -->

<!-- symbiote-template-region-end -->
<!-- TODO: additional package details here -->
<!-- symbiote-template-region-start 7 -->

<details><summary>Expand details</summary>

<!-- TODO: choose one of the following and --‚úÑ--delete--‚úÑ-- the others: -->

That means both CJS2 (via \`require(...)\`) and ESM (via \`import { ... } from ...\`
or \`await import(...)\`) source will load this package from the same entry points
when using Node. This has several benefits, the foremost being: less code
shipped/smaller package size, avoiding [dual package
hazard][x-pkg-dual-package-hazard] entirely, distributables are not
packed/bundled/uglified, a drastically less complex build process, and CJS
consumers aren't shafted.

‚úÑ------------‚úÑ-----------‚è∂-‚è∑-----------‚úÑ------------‚úÑ

That means ESM source will load this package via \`import { ... } from ...\` or
\`await import(...)\` and CJS source will load this package via dynamic
\`import()\`. This has several benefits, the foremost being: less code
shipped/smaller package size, avoiding [dual package
hazard][x-pkg-dual-package-hazard] entirely, distributables are not
packed/bundled/uglified, and a drastically less complex build process.

The glaring downside, which may or may not be relevant, is that CJS consumers
cannot \`require()\` this package and can only use \`import()\` in an asynchronous
context. This means, in effect, CJS consumers may not be able to use this
package at all.

<!-- TODO: choose one of the above and --‚úÑ--delete--‚úÑ-- the others! -->

Each entry point (i.e. \`ENTRY\`) in [\`package.json\`'s
\`exports[ENTRY]\`][x-repo-package-json] object includes one or more [export
conditions][x-pkg-exports-conditions]. These entries may or may not include: an
[\`exports[ENTRY].types\`][x-pkg-exports-types-key] condition pointing to a type
declaration file for TypeScript and IDEs, a
[\`exports[ENTRY].module\`][x-pkg-exports-module-key] condition pointing to
(usually ESM) source for Webpack/Rollup, a \`exports[ENTRY].node\` and/or
\`exports[ENTRY].default\` condition pointing to (usually CJS2) source for Node.js
\`require\`/\`import\` and for browsers and other environments, and [other
conditions][x-pkg-exports-conditions] not enumerated here. Check the
[package.json][x-repo-package-json] file to see which export conditions are
supported.

Note that, regardless of the [\`{ "type": "..." }\`][x-pkg-type] specified in
[\`package.json\`][x-repo-package-json], any JavaScript files written in ESM
syntax (including distributables) will always have the \`.mjs\` extension. Note
also that [\`package.json\`][x-repo-package-json] may include the
[\`sideEffects\`][x-pkg-side-effects-key] key, which is almost always \`false\` for
optimal [tree shaking][x-pkg-tree-shaking] where appropriate.

<!-- symbiote-template-region-end -->
<!-- TODO: additional package details here -->
<!-- symbiote-template-region-start 8 -->

</details>

### License

<!-- symbiote-template-region-end -->

See [LICENSE][x-repo-license].

<!-- TODO: additional license information and/or sections here -->
<!-- symbiote-template-region-start 9 -->

## Contributing and Support

**[New issues][x-repo-choose-new-issue] and [pull requests][x-repo-pr-compare]
are always welcome and greatly appreciated! ü§©** Just as well, you can [star üåü
this project][x-badge-repo-link] to let me know you found it useful! ‚úäüèø Or [buy
me a beer][x-repo-sponsor], I'd appreciate it. Thank you!

See [CONTRIBUTING.md][x-repo-contributing] and [SUPPORT.md][x-repo-support] for
more information.

<!-- symbiote-template-region-end -->
<!-- TODO: additional contribution/support sections here -->
<!-- symbiote-template-region-start 10 -->

### Contributors

<!-- symbiote-template-region-end -->
<!-- symbiote-template-region-start root-package-only -->
<!-- remark-ignore-start -->
<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->

[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)

<!-- ALL-CONTRIBUTORS-BADGE:END -->
<!-- remark-ignore-end -->

Thanks goes to these wonderful people ([emoji
key][x-repo-all-contributors-emojis]):

<!-- remark-ignore-start -->
<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<table></table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->
<!-- remark-ignore-end -->

This project follows the [all-contributors][x-repo-all-contributors]
specification. Contributions of any kind welcome!

<!-- symbiote-template-region-end -->
<!-- symbiote-template-region-start workspace-package-only -->

See the [table of contributors][x-repo-contributors].

<!-- symbiote-template-region-end -->

[x-badge-blm-image]: https://xunn.at/badge-blm 'Join the movement!'
[x-badge-blm-link]: https://xunn.at/donate-blm
[x-badge-codecov-image]:
  https://img.shields.io/codecov/c/github/repo-owner/repo-name/main?style=flat-square&token=HWRIOBAAPW&flag=codecov.flag_here
  'Is this package well-tested?'
[x-badge-codecov-link]: https://codecov.io/gh/repo-owner/repo-name
[x-badge-downloads-image]:
  https://img.shields.io/npm/dm/good-hybridrepo?style=flat-square
  'Number of times this package has been downloaded per month'
[x-badge-downloads-link]:
  https://npmtrends.com/good-hybridrepo
[x-badge-lastcommit-image]:
  https://img.shields.io/github/last-commit/repo-owner/repo-name?style=flat-square
  'Latest commit timestamp'
[x-badge-license-image]:
  https://img.shields.io/npm/l/good-hybridrepo?style=flat-square
  "This package's source license"
[x-badge-license-link]:
  https://github.com/repo-owner/repo-name/blob/main/LICENSE
[x-badge-npm-image]:
  https://xunn.at/npm-pkg-version/good-hybridrepo
  'Install this package using npm or yarn!'
[x-badge-npm-link]: https://npm.im/good-hybridrepo
[x-badge-repo-link]: https://github.com/repo-owner/repo-name
[x-badge-semanticrelease-image]:
  https://xunn.at/badge-semantic-release
  'This repo practices continuous integration and deployment!'
[x-badge-semanticrelease-link]:
  https://github.com/semantic-release/semantic-release
[x-pkg-cjs-mojito]:
  https://dev.to/jakobjingleheimer/configuring-commonjs-es-modules-for-nodejs-12ed#publish-only-a-cjs-distribution-with-property-exports
[x-pkg-dual-package-hazard]:
  https://nodejs.org/api/packages.html#dual-package-hazard
[x-pkg-esm-wine]:
  https://dev.to/jakobjingleheimer/configuring-commonjs-es-modules-for-nodejs-12ed#esm-source-and-distribution
[x-pkg-exports-conditions]:
  https://webpack.js.org/guides/package-exports#reference-syntax
[x-pkg-exports-module-key]:
  https://webpack.js.org/guides/package-exports#providing-commonjs-and-esm-version-stateless
[x-pkg-exports-types-key]:
  https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta#packagejson-exports-imports-and-self-referencing
[x-pkg-side-effects-key]:
  https://webpack.js.org/guides/tree-shaking#mark-the-file-as-side-effect-free
[x-pkg-tree-shaking]: https://webpack.js.org/guides/tree-shaking
[x-pkg-type]:
  https://github.com/nodejs/node/blob/8d8e06a345043bec787e904edc9a2f5c5e9c275f/doc/api/packages.md#type
[x-repo-all-contributors]: https://github.com/all-contributors/all-contributors
[x-repo-all-contributors-emojis]: https://allcontributors.org/docs/en/emoji-key
[x-repo-choose-new-issue]:
  https://github.com/repo-owner/repo-name/issues/new/choose
[x-repo-contributing]: /CONTRIBUTING.md
[x-repo-contributors]: /README.md#contributors
[x-repo-docs]: docs
[x-repo-license]: ./LICENSE
[x-repo-package-json]: package.json
[x-repo-pr-compare]: https://github.com/repo-owner/repo-name/compare
[x-repo-sponsor]: https://github.com/sponsors/Xunnamius
[x-repo-support]: /.github/SUPPORT.md
",
  "root/README.md": "<!-- symbiote-template-region-start 1 -->

<p align="center" width="100%">
  <img width="300" src="https://raw.githubusercontent.com/repo-owner/repo-name/refs/heads/main/logo.png">
</p>

<p align="center" width="100%">
<!-- symbiote-template-region-end -->
good-hybridrepo-description
<!-- symbiote-template-region-start 2 -->
</p>

<hr />

<div align="center">

[![Black Lives Matter!][x-badge-blm-image]][x-badge-blm-link]
[![Last commit timestamp][x-badge-lastcommit-image]][x-badge-repo-link]
[![Source license][x-badge-license-image]][x-badge-license-link]
[![Uses Semantic Release!][x-badge-semanticrelease-image]][x-badge-semanticrelease-link]

</div>

<br />

# <!-- TODO: --> Project Title Here

<!-- symbiote-template-region-end -->

good-hybridrepo-description

<!-- symbiote-template-region-start 3 -->

---

<!-- remark-ignore-start -->
<!-- symbiote-template-region-end -->
<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->

- [Packages](#packages)
- [Contributing and Support](#contributing-and-support)
  - [Contributors](#contributors)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->
<!-- symbiote-template-region-start 4 -->
<!-- remark-ignore-end -->

<br />

## Packages

<!-- symbiote-template-region-end -->

- package-1
- package-2
- package-3

<!-- symbiote-template-region-start 5 -->

## Contributing and Support

**[New issues][x-repo-choose-new-issue] and [pull requests][x-repo-pr-compare]
are always welcome and greatly appreciated! ü§©** Just as well, you can [star üåü
this project][x-badge-repo-link] to let me know you found it useful! ‚úäüèø Or [buy
me a beer][x-repo-sponsor], I'd appreciate it. Thank you!

See [CONTRIBUTING.md][x-repo-contributing] and [SUPPORT.md][x-repo-support] for
more information.

<!-- symbiote-template-region-end -->
<!-- TODO: additional contribution/support sections here -->
<!-- symbiote-template-region-start 6 -->

### Contributors

<!-- symbiote-template-region-end -->
<!-- symbiote-template-region-start 7 -->
<!-- remark-ignore-start -->
<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->

[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)

<!-- ALL-CONTRIBUTORS-BADGE:END -->
<!-- remark-ignore-end -->

Thanks goes to these wonderful people ([emoji
key][x-repo-all-contributors-emojis]):

<!-- remark-ignore-start -->
<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<table></table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->
<!-- remark-ignore-end -->

This project follows the [all-contributors][x-repo-all-contributors]
specification. Contributions of any kind welcome!

<!-- symbiote-template-region-end -->

[x-badge-blm-image]: https://xunn.at/badge-blm 'Join the movement!'
[x-badge-blm-link]: https://xunn.at/donate-blm
[x-badge-lastcommit-image]:
  https://img.shields.io/github/last-commit/repo-owner/repo-name?style=flat-square
  'Latest commit timestamp'
[x-badge-license-image]:
  https://img.shields.io/github/license/repo-owner/repo-name?style=flat-square
  "This package's source license"
[x-badge-license-link]:
  https://github.com/repo-owner/repo-name/blob/main/LICENSE
[x-badge-repo-link]: https://github.com/repo-owner/repo-name
[x-badge-semanticrelease-image]:
  https://xunn.at/badge-semantic-release
  'This repo practices continuous integration and deployment!'
[x-badge-semanticrelease-link]:
  https://github.com/semantic-release/semantic-release
[x-repo-all-contributors]: https://github.com/all-contributors/all-contributors
[x-repo-all-contributors-emojis]: https://allcontributors.org/docs/en/emoji-key
[x-repo-choose-new-issue]:
  https://github.com/repo-owner/repo-name/issues/new/choose
[x-repo-contributing]: /CONTRIBUTING.md
[x-repo-pr-compare]: https://github.com/repo-owner/repo-name/compare
[x-repo-sponsor]: https://github.com/sponsors/Xunnamius
[x-repo-support]: /.github/SUPPORT.md
",
}
`;

exports[`::gatherAssetsFromAllTransformers preset: basic generates expected assets at hybridrepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: basic generates expected assets at non-hybrid monorepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: basic generates expected assets for polyrepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: cli generates expected assets at hybridrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/cli/LICENSE",
  "packages/private/LICENSE",
  "packages/webpack/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: cli generates expected assets at non-hybrid monorepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/pkg-1/LICENSE",
  "packages/pkg-2/LICENSE",
  "packages/pkg-import/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: cli generates expected assets for polyrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "MAINTAINING.md",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: default (no preset) generates expected assets at hybridrepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/cli/LICENSE",
  "packages/private/LICENSE",
  "packages/webpack/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
  "wrangler.json",
  "packages/cli/wrangler.json",
  "packages/private/wrangler.json",
  "packages/webpack/wrangler.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: default (no preset) generates expected assets at non-hybrid monorepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/pkg-1/LICENSE",
  "packages/pkg-2/LICENSE",
  "packages/pkg-import/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
  "packages/pkg-1/wrangler.json",
  "packages/pkg-2/wrangler.json",
  "packages/pkg-import/wrangler.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: default (no preset) generates expected assets for polyrepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "MAINTAINING.md",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
  "wrangler.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib generates expected assets at hybridrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/cli/LICENSE",
  "packages/private/LICENSE",
  "packages/webpack/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib generates expected assets at non-hybrid monorepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/pkg-1/LICENSE",
  "packages/pkg-2/LICENSE",
  "packages/pkg-import/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib generates expected assets for polyrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "MAINTAINING.md",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-esm generates expected assets at hybridrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/cli/LICENSE",
  "packages/private/LICENSE",
  "packages/webpack/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-esm generates expected assets at non-hybrid monorepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/pkg-1/LICENSE",
  "packages/pkg-2/LICENSE",
  "packages/pkg-import/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-esm generates expected assets for polyrepo 1`] = `
[
  ".all-contributorsrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "MAINTAINING.md",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-web generates expected assets at hybridrepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/cli/LICENSE",
  "packages/private/LICENSE",
  "packages/webpack/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-web generates expected assets at non-hybrid monorepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "packages/pkg-1/LICENSE",
  "packages/pkg-2/LICENSE",
  "packages/pkg-import/LICENSE",
  "MAINTAINING.md",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: lib-web generates expected assets for polyrepo 1`] = `
[
  ".all-contributorsrc",
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "ARCHITECTURE.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "MAINTAINING.md",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: nextjs generates expected assets at hybridrepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.cjs",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.js",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: nextjs generates expected assets at non-hybrid monorepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.cjs",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.js",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: nextjs generates expected assets for polyrepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vercelignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.cjs",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.js",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "(deleted) next.config.js",
  "next.config.mjs",
  "package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
  "vercel.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: react generates expected assets at hybridrepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: react generates expected assets at non-hybrid monorepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: react generates expected assets for polyrepo 1`] = `
[
  ".browserslistrc",
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) postcss.config.js",
  "postcss.config.mjs",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "(deleted) tailwind.config.mjs",
  "tailwind.config.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
  "(deleted) webpack.config.js",
  "(deleted) webpack.config.json",
  "webpack.config.mjs",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: wrangler generates expected assets at hybridrepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/cli/README.md",
  "packages/private/README.md",
  "packages/webpack/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/cli/package.json",
  "packages/private/package.json",
  "packages/webpack/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/webpack/src/index.ts",
  "packages/webpack/src/error.ts",
  "(deleted) packages/webpack/test/unit-x.test.ts",
  "packages/webpack/test/unit.test.ts",
  "(deleted) packages/webpack/test/type-x.test.ts",
  "packages/webpack/test/type.test.ts",
  "(deleted) packages/webpack/test/integration/test-config.ts",
  "packages/webpack/test/integration/.config.ts",
  "(deleted) packages/webpack/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/webpack/test/integration/integration-x.test.ts",
  "packages/webpack/test/integration/integration-smoke.test.ts",
  "packages/webpack/test/integration/integration-client.test.ts",
  "(deleted) packages/webpack/test/end-to-end/test-config.ts",
  "packages/webpack/test/end-to-end/.config.ts",
  "(deleted) packages/webpack/test/end-to-end/e2e-x.test.ts",
  "packages/webpack/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "(deleted) packages/cli/tsconfig.types.json",
  "packages/cli/tsc.package.types.json",
  "(deleted) packages/cli/tsconfig.lint.json",
  "packages/cli/tsc.package.lint.json",
  "(deleted) packages/cli/tsconfig.docs.json",
  "packages/cli/tsc.package.docs.json",
  "(deleted) packages/private/tsconfig.types.json",
  "packages/private/tsc.package.types.json",
  "(deleted) packages/private/tsconfig.lint.json",
  "packages/private/tsc.package.lint.json",
  "(deleted) packages/private/tsconfig.docs.json",
  "packages/private/tsc.package.docs.json",
  "(deleted) packages/webpack/tsconfig.types.json",
  "packages/webpack/tsc.package.types.json",
  "(deleted) packages/webpack/tsconfig.lint.json",
  "packages/webpack/tsc.package.lint.json",
  "(deleted) packages/webpack/tsconfig.docs.json",
  "packages/webpack/tsc.package.docs.json",
  "tstyche.config.json",
  "wrangler.json",
  "packages/cli/wrangler.json",
  "packages/private/wrangler.json",
  "packages/webpack/wrangler.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: wrangler generates expected assets at non-hybrid monorepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".env.default",
  ".env",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "packages/pkg-1/README.md",
  "packages/pkg-2/README.md",
  "packages/pkg-import/README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "packages/pkg-1/package.json",
  "packages/pkg-2/package.json",
  "packages/pkg-import/package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "packages/pkg-1/src/index.ts",
  "packages/pkg-1/src/error.ts",
  "packages/pkg-import/src/index.ts",
  "packages/pkg-import/src/error.ts",
  "test/util.ts",
  "test/setup.ts",
  "(deleted) packages/pkg-1/test/unit-x.test.ts",
  "packages/pkg-1/test/unit.test.ts",
  "(deleted) packages/pkg-1/test/type-x.test.ts",
  "packages/pkg-1/test/type.test.ts",
  "(deleted) packages/pkg-1/test/integration/test-config.ts",
  "packages/pkg-1/test/integration/.config.ts",
  "(deleted) packages/pkg-1/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-1/test/integration/integration-x.test.ts",
  "packages/pkg-1/test/integration/integration-smoke.test.ts",
  "packages/pkg-1/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-1/test/end-to-end/test-config.ts",
  "packages/pkg-1/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-1/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-1/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-2/test/unit-x.test.ts",
  "packages/pkg-2/test/unit.test.ts",
  "(deleted) packages/pkg-2/test/type-x.test.ts",
  "packages/pkg-2/test/type.test.ts",
  "(deleted) packages/pkg-2/test/integration/test-config.ts",
  "packages/pkg-2/test/integration/.config.ts",
  "(deleted) packages/pkg-2/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-2/test/integration/integration-x.test.ts",
  "packages/pkg-2/test/integration/integration-smoke.test.ts",
  "packages/pkg-2/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-2/test/end-to-end/test-config.ts",
  "packages/pkg-2/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-2/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-2/test/end-to-end/e2e.test.ts",
  "(deleted) packages/pkg-import/test/unit-x.test.ts",
  "packages/pkg-import/test/unit.test.ts",
  "(deleted) packages/pkg-import/test/type-x.test.ts",
  "packages/pkg-import/test/type.test.ts",
  "(deleted) packages/pkg-import/test/integration/test-config.ts",
  "packages/pkg-import/test/integration/.config.ts",
  "(deleted) packages/pkg-import/test/integration/integration-node-smoke.test.ts",
  "(deleted) packages/pkg-import/test/integration/integration-x.test.ts",
  "packages/pkg-import/test/integration/integration-smoke.test.ts",
  "packages/pkg-import/test/integration/integration-client.test.ts",
  "(deleted) packages/pkg-import/test/end-to-end/test-config.ts",
  "packages/pkg-import/test/end-to-end/.config.ts",
  "(deleted) packages/pkg-import/test/end-to-end/e2e-x.test.ts",
  "packages/pkg-import/test/end-to-end/e2e.test.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) packages/pkg-1/tsconfig.types.json",
  "packages/pkg-1/tsc.package.types.json",
  "(deleted) packages/pkg-1/tsconfig.lint.json",
  "packages/pkg-1/tsc.package.lint.json",
  "(deleted) packages/pkg-1/tsconfig.docs.json",
  "packages/pkg-1/tsc.package.docs.json",
  "(deleted) packages/pkg-2/tsconfig.types.json",
  "packages/pkg-2/tsc.package.types.json",
  "(deleted) packages/pkg-2/tsconfig.lint.json",
  "packages/pkg-2/tsc.package.lint.json",
  "(deleted) packages/pkg-2/tsconfig.docs.json",
  "packages/pkg-2/tsc.package.docs.json",
  "(deleted) packages/pkg-import/tsconfig.types.json",
  "packages/pkg-import/tsc.package.types.json",
  "(deleted) packages/pkg-import/tsconfig.lint.json",
  "packages/pkg-import/tsc.package.lint.json",
  "(deleted) packages/pkg-import/tsconfig.docs.json",
  "packages/pkg-import/tsc.package.docs.json",
  "tstyche.config.json",
  "packages/pkg-1/wrangler.json",
  "packages/pkg-2/wrangler.json",
  "packages/pkg-import/wrangler.json",
]
`;

exports[`::gatherAssetsFromAllTransformers preset: wrangler generates expected assets for polyrepo 1`] = `
[
  ".codecov.yml",
  ".editorconfig",
  "(deleted) .env.example",
  ".gitattributes",
  ".github/ISSUE_TEMPLATE/BUG_REPORT.md",
  ".github/ISSUE_TEMPLATE/config.yml",
  ".github/ISSUE_TEMPLATE/FEATURE_REQUEST.md",
  ".github/workflows/README.md",
  ".github/CODE_OF_CONDUCT.md",
  ".github/CODEOWNERS",
  ".github/dependabot.yml",
  ".github/FUNDING.yml",
  ".github/pipeline.config.js",
  ".github/PULL_REQUEST_TEMPLATE.md",
  ".github/SUPPORT.md",
  ".gitignore",
  ".husky/commit-msg",
  ".husky/commit-msg.mjs",
  ".husky/pre-commit",
  ".husky/pre-commit.mjs",
  ".husky/pre-push",
  ".husky/pre-push.mjs",
  "(deleted) .ncurc",
  "(deleted) .ncurc.js",
  ".ncurc.cjs",
  ".prettierignore",
  "(deleted) .remarkrc",
  "(deleted) .remarkrc.js",
  "(deleted) .remarkrc.json",
  ".remarkrc.mjs",
  ".spellcheckignore",
  ".vscode/launch.example.json",
  ".vscode/settings.json",
  ".vscode/tasks.example.json",
  "README.md",
  "SECURITY.md",
  "(deleted) babel.config.js",
  "(deleted) babel.config.mjs",
  "(deleted) babel.config.cts",
  "(deleted) babel.config.json",
  "(deleted) .babelrc",
  "(deleted) .babelrc.js",
  "(deleted) .babelrc.cjs",
  "(deleted) .babelrc.mjs",
  "(deleted) .babelrc.cts",
  "(deleted) .babelrc.json",
  "babel.config.cjs",
  "changelog.patch.mjs",
  "(deleted) commitlint.config.js",
  "commitlint.config.mjs",
  "(deleted) conventional.config.js",
  "conventional.config.cjs",
  "(deleted) eslint.config.js",
  "(deleted) eslint.config.cjs",
  "(deleted) eslint.config.cts",
  "(deleted) eslint.config.json",
  "(deleted) .eslintrc",
  "(deleted) .eslintrc.js",
  "(deleted) .eslintrc.cjs",
  "(deleted) .eslintrc.mjs",
  "(deleted) .eslintrc.cts",
  "(deleted) .eslintrc.json",
  "eslint.config.mjs",
  "gac.config.mjs",
  "(deleted) jest.config.js",
  "(deleted) jest.config.json",
  "jest.config.mjs",
  "(deleted) lint-staged.config.js",
  "lint-staged.config.mjs",
  "package.json",
  "(deleted) prettier.config.js",
  "(deleted) prettier.config.json",
  "prettier.config.mjs",
  "(deleted) release.config.js",
  "release.config.cjs",
  "src/index.ts",
  "src/error.ts",
  "tsconfig.json",
  "(deleted) tsconfig.lint.json",
  "tsc.project.lint.json",
  "(deleted) tsconfig.types.json",
  "tsc.package.types.json",
  "tsc.package.lint.json",
  "(deleted) tsconfig.docs.json",
  "tsc.package.docs.json",
  "tstyche.config.json",
  "wrangler.json",
]
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=no,force=no 1`] = `
"CODECOV_TOKEN=
GITHUB_TOKEN=
NPM_TOKEN=
GIT_AUTHOR_NAME=
GIT_COMMITTER_NAME=
GIT_AUTHOR_EMAIL=
GIT_COMMITTER_EMAIL=
GPG_PASSPHRASE=
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=no,force=no 2`] = `
"# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov. NOTE THAT, alongside generating this token, you should take
# the time to enable codecov's flags functionality if this is not a polyrepo.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=no,force=yes 1`] = `
"CODECOV_TOKEN=
GITHUB_TOKEN=
NPM_TOKEN=
GIT_AUTHOR_NAME=
GIT_COMMITTER_NAME=
GIT_AUTHOR_EMAIL=
GIT_COMMITTER_EMAIL=
GPG_PASSPHRASE=
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=no,force=yes 2`] = `
"# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov. NOTE THAT, alongside generating this token, you should take
# the time to enable codecov's flags functionality if this is not a polyrepo.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=yes,force=no 1`] = `
"FAKE_SECRET=default_value
FAKE_SECRET_2=default-string-thing
NPM_TOKEN=default
CODECOV_TOKEN=default
SOMETHING=5-is-default
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=yes,force=yes 1`] = `
"FAKE_SECRET=default_value
FAKE_SECRET_2=default-string-thing
NPM_TOKEN=default
CODECOV_TOKEN=default
SOMETHING=5-is-default
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=no,.end.default=yes,force=yes 2`] = `
"FAKE_SECRET=default_value
FAKE_SECRET_2=default-string-thing
NPM_TOKEN=default
# Comment
CODECOV_TOKEN=default

SOMETHING=5-is-default
#
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=yes,.end.default=no,force=no 1`] = `
"# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov. NOTE THAT, alongside generating this token, you should take
# the time to enable codecov's flags functionality if this is not a polyrepo.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=

# TODO: document these
FAKE_SECRET=
FAKE_SECRET_2=
SOMETHING=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=yes,.end.default=no,force=yes 1`] = `
"FAKE_SECRET=fake_value
FAKE_SECRET_2=fake-string-thing
NPM_TOKEN=fake
# Comment
CODECOV_TOKEN=fake

SOMETHING=5
#
GITHUB_TOKEN=
GIT_AUTHOR_NAME=
GIT_COMMITTER_NAME=
GIT_AUTHOR_EMAIL=
GIT_COMMITTER_EMAIL=
GPG_PASSPHRASE=
GPG_PRIVATE_KEY=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: .env=yes,.end.default=no,force=yes 2`] = `
"# shellcheck disable=all

# Codecov test analysis token
#
# The token used during CI/CD to analyze and upload build artifact code quality
# data to Codecov. NOTE THAT, alongside generating this token, you should take
# the time to enable codecov's flags functionality if this is not a polyrepo.
CODECOV_TOKEN=

# GitHub deploy token (alias GH_TOKEN)
#
# The token used during CI/CD to interact with GitHub's API.
GITHUB_TOKEN=

# NPM deploy token
#
# The token used during CD to login to NPM. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
NPM_TOKEN=

# Git push author name
#
# The token used during CD to set the author name of the git push.
GIT_AUTHOR_NAME=

# Git commit committer name
#
# The token used during CD to set the name attached to any git commits.
GIT_COMMITTER_NAME=

# Git push author email
#
# The token used during CD to set the author email of the git push.
GIT_AUTHOR_EMAIL=

# Git commit committer email
#
# The token used during CD to set the email attached to any git commits.
GIT_COMMITTER_EMAIL=

# GPG private key passphrase
#
# The passphrase used to unlock GPG_PRIVATE_KEY. Not referenced during non-CI/CD
# (i.e. local, manual) deployments.
GPG_PASSPHRASE=

# GPG private key
#
# The GPG key used to sign all git commits and releases. Not referenced during
# non-CI/CD (i.e. local, manual) deployments.
GPG_PRIVATE_KEY=

# TODO: document these
FAKE_SECRET=
FAKE_SECRET_2=
SOMETHING=
"
`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: Symbol(symbiote-will-delete-file-at-path) 1`] = `Symbol(symbiote-will-delete-file-at-path)`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: Symbol(symbiote-will-delete-file-at-path) 2`] = `Symbol(symbiote-will-delete-file-at-path)`;

exports[`::gatherAssetsFromTransformer <additional asset content tests> dotenv appends to current .env and .env.default only if force is used: Symbol(symbiote-will-delete-file-at-path) 3`] = `Symbol(symbiote-will-delete-file-at-path)`;
